= Bluetooth Low Energy技術とその概要

Bluetooth Low Energy技術は、様々なものに使える単純さと高い柔軟性とを兼ね備えています。単純ゆえに通信と振る舞いとが1対1に対応しますから、振る舞いを見てそこに飛び交う通信を想像もできます。逆に、振る舞いを作るならば、どのような通信が飛び交うかを想像できれば、それを作れます。

この章は、Bluetooth Low Enenergy技術での、振る舞いと通信との対応を理解していきます。まず、技術の全体像を理解してから、その中にある要素技術、超低消費電力無線通信や暗号化、そしてペアリングやGATTなどを、振る舞いと関連づけて見ていきます。

== 技術の全体像

多くの無線通信技術は、途切れない安定した高速な通信を目指しています。スマートホンを使っていれば、外出先で移動体通信サービスを、帰宅してWi-Fiをと、使う無線通信技術が異なっていても、まるで目に見えない電線でつながっているかのような安定した通信であれば、その違いに気づくこともありません。

では、Bluetooth Low Energy技術を使う製品で、その無線通信を別の規格に置き換えられるでしょうか。GATTと呼ばれるデータ表現の仕組みや、電波の伝わり方を利用するビーコンなど、目に見えない電線以上の工夫が盛り込まれたこの技術は、簡単に置き換えはできません。

置換できない技術というのは、それだけの独自性があるということです。この技術の利用場面を考える企画や、仕様に基づいた実装では、この技術で生み出す振る舞いを、想像して説明せねばなりません。それには、電波の伝搬やデータ表現あるいはアプリケーション開発環境に至るまでの、全体を見渡せる知識が必要です。ここでは、そのような技術を使うための、この技術の全体像を見ていきます。

=== デバイスとその通信スタック

Bluetooth Low Energy技術のコア仕様には、他のデバイスのデータを他のデバイスへと中継するネットワーク技術はありません。ですから、[TBD図]の電波で直接通信をする2つのデバイスが、この技術での最小構成であり基本構成です。[TBD図]のGATTの下には、L2CAPやセキュリティマネージャなどがありますが、説明を簡単にするために、ここでは省略しています。

#@# [連携する要素とその内部]
#@# <全体>
#@# デバイス				スマホアプリ				  自分達のソフト
#@# ファームウェア			アプリケーション				
#@# GATT:サーバー　　	    GATT:クライアント
#@# リンク層　　　			リンク層					  無線モジュール
#@# 物理層(スレーブ)  	   物理層(マスター)				2.4ギガヘルツ、1メガビット毎秒

デバイスは、フィットネス機器やスマートホンなどですが、そのファームウェアやアプリケーションが振る舞いを生み出します。そのアプリケーションから見えるBluetooth Low Energy技術は、GATTと呼ばれるデータ表現の仕組みです。この仕組みは、データ構造と値の読み書き、そして更新通知を提供します。

GATTという仕組みには、読み書きできる値を表すキャラクタリスティクスと、それらキャラクタリスティクスの集合を表すサービスとがあります。サービスは、独立した1つの機能を表現します。例えば、バッテリー残量を表すバッテリー・サービスは、その中にバッテリー残量値を示すキャラクタリスティクスがあります。アプリケーションがバッテリー残量を知りたい場合は、バッテリーサービスを探し、その中にあるバッテリー残量を読み出します。

サービスとキャラクタリスティクスが作る1つの小さなデータベースは、もしもデータを何か形あるものとして見ることができるとすれば、きっとランプやスイッチがたくさんある操作盤に見えることでしょう。ランプの点灯状態を見るのは、キャラクタリスティクスを読み出すのと同じことです。スイッチを押すことは、キャラクタリスティクスに値を書き込むのと同じです。

サービスは、そのデバイスの1つの独立した機能を示します。振る舞い、つまりプロファイルに必要な複数の機能は、GATTの仕組みの中で、複数のサービスとして表現されます。また、サービスは再利用されます。どのようなプロファイルでも、内蔵バッテリーの残量を示したいのならば、バッテリー・サービスが使えるでしょう。

[TBD図]では、センサなどの値を持つ周辺機器がサーバーで、スマートホンがクライアントになります。ネットワーク・サービスの開発経験があると、サーバーといえば強力な処理能力がある計算機を想像しがちです。ですが、気温や心拍値などのセンサーからの値や、動作の開始や停止といった指示を受け取るのは、周辺機器です。ですから、値を持つ周辺機器がサーバーになります。

GATTの仕組みとは、データ構造とその読み書きのコマンドの2つです。データは表で、表の中での位置、データの種類を表す値、そして値そのものの、3つの列があります。GATTのクライアントは、データの種類がサービスを表すものを指定して、行を読み出して、サービスとキャラクタリスティクスの構造を読み出したり、表の中の位置で行を指定して、値そのものの読み書きをします。また、クライアントが通知を設定した行の値が更新されると、サーバーはクライアントにその変更を通知します。

物理層は、0と1のデジタル・データを電波で送受信します。1マイクロ秒ごとに、0を送りたいなら周波数と少しTBDして元に戻す、1を送りたいならば周波数を少しTBDして元に戻す、周波数をシフトする方式を用います。受信側は、受信した電波の周波数の高低の変化から、0と1のデジタル・データを検出します。

リンク層は、物理層を使い通信を確保します。無線通信は、周りの環境や通信の衝突で、常に安定した通信ができるとは限りません。そこで、パケットと呼ばれる、ある程度の大きさのビット列を送り、相手はそれを正しく受信できたかどうかを返す、パケット通信をします。

GATTの読み書きのコマンドは、だいたい1つのパケットに収まります。ですから、この技術のリンク層は、通信相手とぱっとつながり、いくつかのパケットを素早くやり取りできればよいのです。音声や動画転送に用いる無線通信技術が、途切れず安定した、まるで目に見えない電線のような通信だとすれば、Bluetooth Low Energy技術の無線通信は、必要な少しのパケットを素早く伝える、イベントを伝える通信と言えます。

=== 通信とその振る舞い

多くの無線通信技術が、インターネット技術の利用を前提としています。ですが、Bluetooth Low Energy技術は、GATTを基盤にしたデータベースと、データベースの読み書きと更新通知とが数個のパケットのやりとりで完結します。

Bluetooth Low Energy技術で、実際の通信がどのようなものなのかを、[TBD図]のデバイスの最小構成で見ていきます。この技術の通信は:
- 通信相手の発見、
- 通信の開始と終了、
- サービスの読み出しとキャラクタリスティクスの読み書き、
これら3つの手順で進みます。

#@# 発見
デバイスとスマートホンが目の前にあれば、これほど近いのだから通信ができても当然に思えます。ですが、機器には目があるわけではありません。Bluetooth Low Energy技術の通信は、電波でお互いを見つけることから始まります。

まず、デバイスが、アドバタイジングをします。Bluetooth Low Energy技術は、2.4ギガヘルツで使える80メガヘルツの周波数幅を、1つが2メガヘルツ幅のチャンネルに分割しています。その40チャンネルのうち、3つのアドバタイジング・チャンネルで、数十ミリ秒から数秒ごとに、アドバタイジング・パケットを送信します。

アドバタイジング・パケットに入れられるデータは、デバイス名の文字列や、デバイスがサポートしているサービスの識別子、あるいは企業独自のデータなどがあります。ですが、1つのアドバタイジング・パケットに収められるアドバタイジング・データは合計で31バイトと小さなものです。どのようなアドバタイジング・パケットならば通信相手だと分かるのか、その種類と値は、プロファイル仕様書や開発仕様書で定義します。

#@# 通信の開始と終了
アドバタイジングしている機器は、アドバタイジング・パケットを送信した後に、相手からのパケットが来ないかと、ほんの短い時間だけ受信します。アドバタイジング・パケットで通信したい相手を見つけた機器は、その受信時間に合わせて接続要求のパケットを送信します。

Bluetooth Low Energy技術の通信は、コネクション・インターバルという時間間隔ごとに、機器がパケットをやりとりします。やりとりすべきデータがなければ、そこでパケットのやりとりは終わり、次のコネクション・インターバルまで待機します。このコネクション・インターバルは、7.5ミリ秒から10TBD秒までの値が設定できます。どちらかの機器が通信終了のパケットを送るか、送られてくるだろうと期待したパケットが受信できなければ、通信は終了します。

#@# サービスの読み出しと、キャラクタリスティクス
Bluetooth Low Energy技術の通信は、多くはGATTを基盤とします。クライアントとなるスマートホンは、サーバーであるデバイスにATTのコマンドを送ります。目的のサービスを検索して、そのサービスが含むキャラクタリスティクスのテーブル・ハンドラTBDを読み出します。そのテーブル・ハンドラは、ファームウェア更新でもない限り、通常は変わることはありません。たいていのクライアントは、この読み出したテーブル情報をキャッシュして、2回目以降の通信ではテーブル情報の読み出しを省略して、すぐにキャラクタリスティクスの読み書きをします(TBD 動作確認すること)。

キャラクタリスティクスは、例えば心拍数のように、サーバーが値を更新するものがあります。更新された値をクライアントが一定時間ごとに読み出して確認するポーリングをすると、通信のデータ量が増えます。そこで、GATTには通知の仕組みがあります。クライアントは、通知をして欲しいキャラクタリスティクスに、通知登録をしておきます。サーバーは、キャラクタリスティクスの値を更新したときに、通知登録を見て、クライアントに更新を伝えます。

=== 超低消費電力とその工夫

ここまで、デバイスの内部構成と具体的な通信とを見てきました。次は、Bluetooth Low Energy技術のその名前にある、超低消費電力無線通信技術がどのような工夫で実現されているかを見ていきます。

Bluetooth Low Energy技術は、その名前の通り、超低消費電力無線通信技術を特徴とします。これは、身の回りにあるものやウエアラブル・デバイスに無線通信技術を使うために欠かせない特徴です。このような機器は、常に動き続けていたり、使いたい時に手にとればすぐに使えるようにするため常に待機状態にあります。それでも、電池交換が手間だと思われないように、電池がもたなければなりません。

電池の体積は、製品の大きさとデザインとを決めてしまいます。電池売り場を見ると、単一電池や単三電池のように大きさの違う電池があります。電池の容積が大きいほど、電力量も大きくなります。もしも、単三電池を使う腕時計があったらと想像して、単三電池を手首に置いてみます。大きくて不恰好でしょう。腕時計に使われているボタン型電池の電力量は、単三電池の1/100ほどです。
#@# パナソニックのデータシートでアルカリ単三電池20mA放電で140h、2800mAh
#@# https://jpn.faq.panasonic.com/app/answers/detail/a_id/29060/~/%5Bｱﾙｶﾘ･ﾏﾝｶﾞﾝ%5D-乾電池の電池容量はどれ位？-pz29060
#@# 腕時計だと、SB-BK, 酸化銀電池1.5V、30mAhくらい。

ですが、電波の送受信を行う高周波回路は、そもそも消費電力を小さくしづらいものです。熾烈な技術競争でハイエンドでは10万円を超えるスマートホンであれば、最先端技術が使えるかもしれません。ですが、身の回りにあるものに使う無線通信技術では、その無線通信部分の部品代は合計で目安として500円以下です。

Bluetooth Low Energy技術の超低消費電力無線通信技術は、高周波回路を使う時間をできるだけ小さくする単純な方法です。無線通信部分では、お互いに通信を行うタイミングを合わせておいて、通信をする瞬間だけ高周波回路を動かし、それ以外の時間では高周波回路を使いません。通信をする時間間隔をコネクション・インターバルと言います。例えば、コネクション・インターバルが16ミリ秒で通信が0.5ミリ秒ならば、無線通信回路の消費電流は見かけ1/32に、1秒ごとならば1/2000になります。

Bluetooth Low Energy技術の超低消費電力無線通信技術は、あまりにも単純な方法です。これほど単純な工夫ならば、もっと昔から広く一般的に使われていそうです。この工夫だけでは、一般的な実用的な無線通信にはなりません。さらに、いくつかの前提や工夫が必要です。

まず、この超低消費電力化は、データを送る電力を小さくする技術ではありません。Bluetooth Low Energy技術の通信は、ほとんどの時間はデータが流れておらず、やりとりしたいデータが来れば十分小さな遅延時間でそれを送り届けるものです。ですから、データを送り届けられる状態をいかに小さな電力で維持し続けられるかを目指します。情報の量はビットという単位で表しますが、この技術は他の技術と比べても、1ビットの情報を送るのに必要な電力量は、さほど小さくはありません。

そして、低頻度なコネクションの維持では、通信は簡単に途切れます。今パケットが届いていても、時間が経つほどに周囲の電波状況やデバイスの位置関係は大きく変化しますから、次のコネクション・インターバルでもパケットが届くかは分かりません。そもそも不安定な無線通信を、まるで目に見えない電線のように途切れない安定した通信にするのが、無線通信技術の研究テーマです。

Bluetooth Low Energy技術は、パケットがやりとりできないと、接続を維持しようと頑張ることはなく、あっさりと通信を終了とします。これでは、通信が頻繁に途切れてしまいます。ですが、通信が終了したデバイスは、すぐにアドバタイジングを始め、早ければTBDミリ秒で再び接続できます。

低速な通信回線で、ウェブブラウザで上から下へとゆっくりと表示が広がっていく画像表示を見ているとします。もしも、通信回線を頻繁に抜き差しすると、どうなるでしょうか。おそらく、回線を抜くたび画像更新はそこで止まり、回線を挿せば、また初めから画像が表示されだして、画像全体を見ることはないでしょう。

Bluetooth Low Energy技術の、素早い再接続が機能するには、さらに通信開始時の処理が軽いこと、やりたいことが短時間で完了することが必要です。通信開始時の処理は、暗号鍵の交換や認証は素早く処理が完了するよう工夫されており、またGATTを基盤とするテーブル情報をクライアントはおそらくキャッシュしています。ですから、接続が確立すれば、1つか2つのパケットで、目的のキャラクタリスティクスの読み書きができます。これは、TBD1ミリ秒程度の、短い時間で完了します。

Bluetooth Low Energy技術の超低消費電力無線通信技術は、TBDミリ秒からTBD秒までと、幅広いコネクション・インターバルで、通信の遅延時間と消費電力との兼ね合いに、大きな選択幅を持たせています。この方式は、素早い再接続と少しのパケットで処理が完結するGATTを基盤にしたデータ表現など、いくつもの工夫との組み合わせで初めて実用的に使えます。もしも頻繁に通信が切断していても、再接続により、利用者はそれに気がつけないでしょう。

=== コア仕様とプロファイル仕様

Bluetooth Low Energy技術が使われている場面を探すと、その利用分野の広さと使われ方の多様さに気づきます。規格作成時に想定されていた周辺機器やフィットネス機器はもちろん、想定にはなかったビーコンやアプセサリと造語で呼ばれるものが登場し、広く普及しています。これは、GATTを基盤にした技術の使い方の自由さにあります。

使い方が広く、どのような組み合わせでも通信ができる機器は、作れません。ですが、例えば電話は、お店の予約をしたり季節の挨拶をしたりと、様々な利用ができています。これは、電話の向こう側に、柔軟に情報を扱う人がいるからです。ですが、デジタル無線通信技術で情報を扱うマイクロ・コントローラに、柔軟で万能な働きを実装することはできません。ですから、通信でやりとりするデータ列の並びとそのやりとりの順番とは、プログラムで実装できる厳密な仕様にされます。

Bluetooth Low Energy技術は、電波をやりとりする物理層からGATTの仕組みまでを、コア仕様としています。そして利用場面ごとに、プロファイル、つまり機器の振る舞いと、そのプロファイルが使うGATTを基盤にしたサービス、これら2つの仕様が作られます。このコア仕様とプロファイル仕様との分離が、広い利用場面を支えています。コア仕様のおかげで、Bluetooth Low Energy技術を使う機器同士で、接続をしてGATTを読み出すまでができます。そしてプロファイルを実装している機器同士で、そのプロファイルが使えます。

人には形のないデジタル情報を把握することは困難ですが、もしもGATTを基盤にしたサービスが目に見えたとすれば、ちょうど操作盤のように見えるでしょう。心拍数のような数値を読み出すキャラクタリスティクスは数値表示、動作の開始や停止を書き込むようなキャラクタリスティクスは押しスイッチに相当します。サービスは、表示やスイッチ、機能単位で枠で囲ったものに見えるでしょう。その操作盤を見て操作をしたり、操作盤につながるものの動作とが、振る舞い、つまりプロファイルです。

Bluetooth Low Energy技術では、どのようなプロファイルでも実装できます。これをカスタム・プロファイルと呼びます。ですが、例えば周辺機器などは、どの会社の製品でも同じように使えなければ市場を形成できません。このために、Bluetooth SIGが、プロファイルを採択して、プロファイルも認証プログラムに含めます。プロファイルを採択して欲しいと思ったら、どうすればよいのでしょうか。ワーキンググループに参加できるアソシエイトメンバーとしてBluetooth SIGに参加して、プロファイルを提案して様々な指摘を受けて採択を目指します。

スマートホンのアプリケーション開発には、コア仕様書にあるGATTを基盤にしたAPI(Application Program Interface)が提供されています。この仕組みで、アプリケーションは、独自のサービスを定義したカスタム・プロファイルを実装する機器と連携ができます。アプリケーションは、機器単体では提供できない豊かなユーザ・インタフェース、機器を買い替えてもデータを失わずに蓄積し続けられる永続性や、課金やネットワークサービスとの連携など、機器をサービスに統合する要になります。

Bluetooth SIGでの採択を目指さず、独自に展開されるプロファイルもあります。楽器の演奏データをやりとりする規格MIDI(Musical Instrument Digital Interface)では、2014年にApple社が自社製品にカスタム・プロファイル MIDI over Bluetooth Low Energy を搭載しました。またApple社がプロファイル仕様書を公開したので、そのプロファイルに独自に対応させた製品がサードパーティから登場しました。2015年には、そのプロファイルをMIDIアソシエイションが採用しています。
#@# https://www.midi.org
#@# https://www.midi.org/specifications-old/item/bluetooth-le-midi

Apple社は、iOSデバイスと連携する周辺機器の開発には、MFi(Made for iPhone)プログラムを提供しています。このプログラムに参加して初めて、開発に必要な技術情報の開示と製造販売のライセンスを受けられます。MFiプログラムでBluetooth Low Energy技術を使うものには、独自ゲームコントローラやFind My、またiBeaconとHomeKitがあります。また、Bluetooth Low Energy技術では、MFiプログラムに独自認証技術があります。詳細はMFiプログラムに参加しなければ知ることもできませんが、Apple WatchをiPhoneとボンディングすると、そのデバイス管理は設定アプリではなくWatchアプリからのみできるように、デバイスとアプリケーションとを結びつけられます。

=== 新技術の登場とその普及

新たに開発された技術は、それが製品やサービスの形で提供されて初めて、私たちの生活と社会とを豊かにします。通信には通信相手が必要ですから、1つの製品が新たな通信技術を採用しても、通信相手がいないのでは使いどころはありません。Bluetooth Low Energy技術は、その登場から、どのように広まっていったのでしょうか。

世界で初めてBluetooth Low Energy技術を採用した製品は、2011年10月に発売されたiPhone4sです。iPhone4sのオペレーティング・システム、iOS5では、CoreBluetoothフレームワークを通じて、一般アプリケーションがGATTを基盤にした通信ができました。通信する相手もない、しかし世界に広く普及したこの機種が、Bluetooth Low Energy技術の開発とビジネスの基盤となりました。

また、Bluetooth Low Energy技術の普及には、強制力がありました。この技術は、Bluetooth4.0からその一部に含まれるもので、オプションではなく必ず実装されねばなりません。そして、Bluetooth無線技術は、スマートホンにはほぼ必ず採用されている技術です。Bluetooth無線技術の最新技術であるBluetooth4.0が広まるに従い、使われようが使われまいが、この技術も普及したのです。

Bluetooth Low Energy技術では、それまでのBluetooth無線技術では見られなかった、新たな利用場面と分野の登場と成長とが期待されました。ヘッドセットのような、用途が決まった機器であれば、製品を製造販売する大口需要家に、操作ボタンの数や振る舞いのような細かいカスタマイズなどの技術サポートをして、集積回路の採用を働きかけます。ですが、サービスと機器とが深く結びつくアプセサリでは、ファームウェアそのものがサービスと結びついて開発されるため、外部から技術サポートができる規模ではなくなります。

集積回路を提供する会社は、開発キットや無線モジュールを、1つから安価に通信販売で入手できるようにしました。そして、開発ドキュメントや開発者フォーラムのウェブサイトを整備して、技術情報と議論の場とを一般に広く開放しました。秘密保持契約の元で技術情報が提供されると、開発で得た知見を人の目に触れるブログ記事に書くことはできません。情報の公開は、何かを作る人が現れて、その苦労や工夫をブログなどに書き、それを見て何かを作る人がまた出てくる、情報とその循環をもたらします。

まず新技術に素早く反応したのは、個人や小規模な会社です。ユニークなアイディアを試作したり、クラウド・ファウンディングで資金を集めて製造と販売を始めるものも登場しました。例えば、鍵忘れを防止するKeyfobと呼ばれるアクセサリは以前からあるものですが、無線通信が途切れた時の位置を記録するスマートホンのアプリケーションを開発して、駐車場のどこに車があるかがわかる体験を提供するものがありました。また、Bluetooth SIGは、製品登録費用を無償にして、Bluetooth Low Energy技術を活用した製品の登録を促しました。

Bluetooth Low Energy技術の普及と市場の登場は、前節で見たように、プロファイルをよりどころとします。心拍数やパワーメータのプロファイルは、フィットネスや自転車向け製品を生み出します。Bluetooth SIGの採択に寄らず、iOSやAndroid OSがそれぞれにカスタム・プロファイルを発表します。アドバタイジングを利用した、新たなマイクロロケーションと近接検出が登場しました。これは、位置情報のフレームワークと統合されていたので、ビーコンとアプリケーションとの連携を、サービスにできないか、またビジネスに活用できないかと各地で検討や実験が行われました。

Bluetooth Low Energy技術は、新たな利用場面をさらに補強するように、コア技術が頻繁に更新され続けています。2009年12月にBluetooth4.0が公開されてから、そのバージョン番号は、約10年後の2020年1月にはBluetooth5.2に達しました。Bluetooth Low Energy技術はBluetooth無線技術の一部ですが、この10年間の頻繁なバージョン更新は、ほとんどがBluetooth Low Energy技術の更新によるものです。ある時点でBluetooth Low Energy技術の活用を検討したが、技術的な不足で採用に至らなかった場合でも、数年後にはコア技術が拡張されているかもしれません。技術更新を継続して把握していくことが必要です。

=== Bluetooth無線技術とそのまとめ

Bluetooth無線技術の中で、Bluetooth Low Energy技術はどのように位置付けられるのでしょうか。この技術は、Bluetooth3.0までの技術とは、電波で情報をやりとりする方式から異なる技術です。Bluetooth4.0は、それまでのBluetooth3.0とBluetooth Low Energy技術の、2つの技術を内包することで、Bluetooth Low Energy技術をBluetooth無線技術に統合しました。

Bluetooth3.0までの技術と、Bluetooth Low Energy技術とを区別するために、正式な名称ではありませんが、ここではBluetooth3.0までの技術をクラシックBluetoothと呼ぶことにします。クラシックBluetoothとBluetooth Low Energy技術は、どちらかの技術がどちらかの技術を全面的に置き換えていくようなものではありません。それぞれに得意な利用分野があります。

クラシックBluetoothは、いわば目に見えない電線のように、途切れず安定した高速な通信と言えます。ヘッドホンや連絡帳のデータ交換、あるいはテザリングなど、データが連続して流れ続ける、また人が通信を使う場面で使われます。もしも通信が不安定で途切れると、ヘッドホンであれば音楽が途切れたり、不快な体験になります。ですから、安定した連続した通信が必要です。

Bluetooth Low Energy技術は、ぼんやりと広がった雰囲気の中で、機械同士がおしゃべりするような通信と言えます。GATTを基盤にしてデータが表現されて、そのデータの読み書きや値更新を通知するための通信です。キーボードやスマートウォッチあるいは温度計など、通信は維持していつでもデータをやりとりはできるが、データのやりとりは低頻度な場面で使われます。

Bluetooth無線技術は、技術を更新し続ける規格です。1999年にBluetooth1.0を公開してから、3年程度で新たな規格を公開し続けています。2009年12月のBluetooth4.0から、4.1、4.2、5.0、5.1と、マイナーバージョンとメジャーバージョンを更新し、2020年1月にはBluetooth5.2が公開されています。Bluetooth4.0以降の更新は、そのほとんどがBluetooth Low Energy技術の拡張です。


後方互換性、それまでのものも使える、新たなものも使える。
技術の革新、新技術の登場、旧機種、高速化、Bluetooth3.0のハイスピード、
ヘッドホン、高音質化技術の開発、新製品。
テザリング、高速通信。無線通信で利用場面や分野を生み出し、
人が使うものというよりも、サービスに組み込まれて。



Bluetooth Low Energy技術の更新は、例えばキーボードに使う技術がBluetooth4.0からBluetooth5.0に更新されても、その利用体験は何も変わりませんから、製品を買い換える動機にはなりません。この技術の更新は、新たな利用場面を切り開くことで、新たな市場と製品とをもたらします。

技術の更新で通信速度が上がれば、ビットレートのより高い高音質化技術が使えたり、快適なテザリングが提供できます。技術の更新が、新製品に買い替える理由となります。


クラシックBluetoothでも、Bluetooth Low Energy技術でも、Bluetooth SIG 
Bluetooth SIGに採択されたプロファイルで標準化されているものは、製品だけを作ります。
標準化されているものは、ソフトウェア開発環境からサンプル・コード
有線接続のイヤホンでも、独自規格のイヤホンプラグを使う製品は、まずありません。接続部分を独自にするには、つながる一端にあるイヤホンだけではなく、その接続部分がある製品も作るしかなくなるからです。

シリアル通信でも。MFiで、認証があれば、紐付けられる。
手軽さ、電池消費量の問題、大きさ、充電、手間。それらの統合。
アプセサリの登場、スマートホンのアプリケーション。では独自?、発見と接続部分、イヤホンジャックを差し込む、勝手に差し込まれたら、そんなことはない。想定外。でも、アプリが勝手に探して勝手に通信を始められる。その構造の違い。認証があれば、通信でアプリと繋ぐことができる。でも流行らなかった。電池の問題が解決できないから。頻繁な充電。



アプリケーションに紐付きすぎて、開発がまるっとできる。通信相手も作る。ハードウェアはスマホで、
システムとして、アプセサリ。


シリアル通信、GATTを基盤とした、
コマンドとデータ構造、定義して。

振る舞いが多種多様。カスタマイズ、ではなく、開発になる。サービスと深く連携する。
シリアル通信みたいなものではない。そうしてもいいけど。HomeKitなどは、単なる通信に落としているけど、それはそれでいいのか。 


閉じていること、システムの一部であれば、その部分は通信の部分は、誰かが同じものを作って使っているから、ミスや障害やがあれば、それはフォーラムで共有される。目の前にあるそれと向き合うしかない。解決するためのフォーラムはあるけど、正しい質問をするほかない。自分たちが作ったハードウェアや使っている環境などが原因かもしれない。相手と同じ環境を共有できない。共有しようとすれば、それを切り出して、再現できるものを作るほかない。その手間がかかる。でも周り未知に見えても、それが一番早い解決方法かもしれない。

もう少し深く、規格の全体像を見ていこう。

== 無線通信規格とその使い方

=== Bluetooth Low Energyの規格団体とその運用

Bluetooth規格の開発を監督しているのは、1998年に設立された非営利の非株式会社 Bluetooth Special Interest Group (SIG), Inc. (Bluetooth SIG) △https://www.bluetooth.org☆ footnote:[Bluetooth SIG について △https://www.bluetooth.org/ja-jp/members/about-sig-overview です。

この Bluetooth SIG は Bluetooth対応製品の開発、製造、販売はしません。規格に参加するメンバーが多種多様な機器を接続するための望ましい無線技術を開発することより、Bluetoothブランドを強化することを使命としています。

Bluetooth SIGの主な任務は、次の4つです:

* Bluetooth 仕様の公開;* 認証プログラムの管理運営;* Bluetooth 商標の保護;* Bluetooth 無線技術の普及促進。

認証プログラムには宣言と認証の2つがあります。"宣言"(Declaration)は、自社ブランドとしてBluetooth製品を一般販売する場合に必要です。無線モジュールを一切変更せずに組み込んだ自社製品や、設計製造会社の製品をそのまま自社製品として一般販売する場合は、宣言のみが求められます。

宣言する製品は、ヘッドホンなど電気量販店の店頭に並ぶような製品だけではなく、無線モジュールやスタックなどの、いわば製品を作るための部品も、宣言すべき製品に含まれます。宣言することで、Bluetooth無線技術の特許使用や商標利用が可能となります。もちろん、Bluetooth製品の卸や小売をするだけならば、宣言も認証も不要です。また、試作や評価段階では宣言は不要です。

なにかしらの設計をしたBluetooth製品には、宣言に加えて、"認証"(qualification)が必要です。これは、その設計されたものを試験してBluetoothの仕様を満たすと確認するものです。この認証プログラムは、設計で変更した部分を確認します。ですから、例えば無線モジュールにカスタム・プロファイルのアプリケーションを実装する場合は、追加したカスタム・プロファイルの部分だけを認証します。それ以外の、電波を出す部分やスタックは、無線モジュールの認証を引き継げます。

電波のやり取り部分の認証は、校正された高周波測定装置が必要ですから、認定機関に機器を持ち込み測定してもらいます。これには専門家に依頼するため相応の費用と時間がかかります。無線モジュールにカスタム・プロファイルを実装しただけならば、認証試験レポートの自己申告で済みます。このレポートは、オンラインでテスト手順を生成して、99ドルで販売されている試験装置に通すと、自分たちで生成できます。

==== Bluetooth Low Energyの規格とその変遷

Bluetooth無線技術は、時代の要求にあわせて、新しいバージョンの規格を発表してきました。電波をやりとりする物理層に新しい技術を導入するたびに、仕様のメイジャー・バージョン番号が増えています。バージョン1.0仕様は1999年に公開されました。そして、2004年にBluetoothコア仕様バージョン 2.0 Enhanced Data Rate (EDR)が、2009年には Bluetoothコア仕様バージョン 3.0 High Speed (HS)が公開されました footnote:[社歴 △https://www.bluetooth.com/ja-jp/media/our-history]。

2010年に公開された Bluetooth コ​​ア仕様バージョン4.0で、Bluetooth無線技術にBluetooth low energy技術が統合されました。この技術は、もともとは2006年にWibreeという規格として公開されたものです。その技術を、Bluetooth無線技術に、将来の発展も視野に入れて最小限の変更をして統合したものが、Bluetooth low energy技術です。

Bluetooth low energy技術の、デジタル・データを電波でやり取りする技術は、Bluetooth3.0までの技術とは異なります。統合したといっても、Bluetooth 4.0は、Bluetooth 3.0までの技術と、Bluetooth low energy技術の、2つの技術を内包したものです。そのため、Bluetooth 4.0では、Bluetooth 3.0までの無線技術とBluetooth low energy技術との両方に対応したデュアル・モードと、Bluetooth low energy技術のみに対応したシングル・モードとの、2種類があります。

Bluetooth無線技術は、バージョン3.0まで後方互換性を保ってきました。ですから、例えばバージョン2.0で製造された機器は、バージョン3.0の機器と接続し利用できます。Bluetoothの商標(ロゴ)があれば、そのバージョンを気にすることなく、安心して利用することができました。

ですが、Bluetooth 4.0では、Bluetooth 3.0まで保ち続けてきた後方互換性が、初めて一部失われました。2つの技術に対応するデュアル・モードであれば、すべての機器と接続できます。ですが、Bluetooth 3.0 までのBluetooth無線技術を採用している機器では、Bluetooth 4.0のシングル・モードの機器には接続できません。

このため、Bluetooth SIGは、コア仕様を公開した翌年の2011年10月に、Bluetooth 3.0までのロゴに加えて、Bluetooth 4.0専用のロゴを新たに発表しました。それが、Bluetooth 4.0のデュアル・モードにBluetooth Smart Ready、シングル・モードにBluetooth Smartという、2つの新しい商標(ロゴ)です。ですが、Bluetooth 4.0が広く普及した現在では、3つもあるロゴは利用者を混乱させるばかりです。そこで2016年からは、新しい青色で更新した1つの商標へ、切り替えが進められています。

コア仕様はバージョン4.0の公開から、短期間に仕様が更新されてきました。2010年のバージョン4.0の3年後に2013年12月に4.1が、その翌年の2014年には4.2が、さらに2年後に2016年に5.0が公開されました。これらの更新は、バージョン4.0との後方互換性を保ちながら、Bluetooth low energy技術に、より強固なセキュリティ、通信速度の向上、そして通信距離を延ばす技術を導入しています。

コア仕様の変遷をみると、新製品をこれから開発するならば、どのバージョンのコア仕様を選択すべきか迷うかもしれません。バージョンごとに、コア仕様の技術要素は増えていきますが、自分たちが使う技術はその全体ではなく部分です。また、Bluetooth 4.0以降は後方互換性は保たれていきます。ですから、自分たちが必要とする技術要素を決めれば、その技術が含まれているコア仕様以降であれば、どのバージョンを選んでもよいのです。

スマートホンの周辺機器ならば、Bluetooth 4.0でよいです。いくつかのBluetooth low energy技術の機器を集約してスマートホンに伝えるハブ・デバイス、例えば自転車のセンサー情報を集約してスマートホンに伝える機器や、家電製品の制御を取りまとめるコントロール・パネルのような機器などは、同時にセントラルとペリフェラルになれるBluetooth 4.1以降が必要です。また、HomeKitあるいはインターネット技術を使うものには、連続したデータをより効率よく扱えるBluetooth 4.2が適しているでしょう。

さらにBluetooth5.0および5.1へと発展しています。規格のメジャー番号が増えるのは、物理層に新たな技術が導入された時です。Bluetooth5.0では、4.0での1Mbpsに加えて2Mbpsのより高速な変調方式が追加されました。さらに、通信距離を大きくするための、前方エラー訂正方式を追加したコーデッドPHYが追加されました。通信距離が大きくなると、だんだんとビットエラーが発生していきます。前方エラー訂正方式を導入することで、 発生しているビットエラーを訂正することができます。そのかわりに、同じ情報量を送るにも、より多くの通信時間がかかります。Bluetooth5.0は、通信の高速化と長距離化が、大きなアピールポイントですが、この2つは独立した技術です。ですから、高速化かつ長距離化はできません。Bluetooth5.0の技術では、高速化か、長距離化か、どちらかを選ぶことができます。またBluetooth4.xの技術とは、互換性がありませんから、この利点は活かせません。Bluetooth5.0のものが通信するときは、4.x互換で通信することになります。クラシックBluetoothでのように、通信できないなんてことはありません。

また、コア仕様のバージョン選択は、半導体会社によって、半導体の選択に影響しない場合と影響する場合があります。Nordic Semiconductor社の製品では、nRF51822は、コア仕様の更新に、無線通信を制御するスタックと呼ぶソフトウェアの更新で対応してきました。そのため、nRF51822はBluetooth 4のいずれでも対応できます。また、テキサス・インスツルメンツ社の製品では、CC2540はBluetooth 4.0のみに対応します。Bluetooth 4.1および4.2には、CC2540の後に開発された、異なる構成のCC2640が対応します。

宣言は、宣言ID(IDentifier, 識別子)を購入し、新しい申告を作成して、準拠宣言(DoC,Declaration of Compliance)に署名することで、完了します。宣言IDの価格は、2017年の時点で、年会費が無償のアダプターでは4,000米ドル、年会費が求められるアソシエイトメンバーでは8,000米ドルです。あるいは、最初のBluetooth製品を商品化するスタートアップ企業のためのイノベーション推奨プログラムが適用されれば、2,500米ドルになります。

===　Bluetooth low energy のアーキテクチャ

Bluetooth low energy のアーキテクチャを階層表示したのが [#fig_ble_protocol_stack] です。通信技術は異なる機種間でデータをやりとりする技術です。0/1のビット・データのやりとりにはじまり、接続管理やビット・データのかたまりの意味づけなど、いくつもの役割が組みあわさって、はじめて通信ができます。Bluetoothは、通信の手順やデータ構造をプロトコル、機器の振る舞いをプロファイル、と呼びます。

![ #fig_ble_protocol_stack Bluetooth low energyのプロトコル・スタック](fig/ch02_ble_protocol_stack.png)

物理層からGATTまでの階層は、それぞれ下層の機能を使って、相手の同じ階層のプロトコルと通信します。ジェネリック・アクセス・プロファイルは、機器の振る舞いを定義します。機器の振る舞いは、物理層からGATTまでのレイヤそれぞれの役割を通じて実現されるので、ジェネリック・アクセス・プロファイルは、特定のレイヤのものではなく、物理層からGATTまでの全てのレイヤに影響を与えます。物理層からGATTまでの階層は、相手の同じ階層のプロトコルと通信します。レイヤの役割は以下のとおりです:

* Generic attribute profile (GATT, ジェネリック・アトリビュート・プロファイル)** サービス/キャラクタリスティクスを提供。-Attribute protocol(ATT, アトリビュート・プロトコル)** アトリビュートという値をやりとりする* Logical Link Control and Adaptation Protocol(L2CAP, ロジック・リンク・コントロール・アンド・アダプティブ・プロトコル)** 論理チャンネルの提供* Logic link(ロジックリンク)** 近接デバイスの発見と接続、通信* Physical layer(物理層、フィジカル・レイヤ)** 無線通信

==== コントローラとホスト

Blueoothのアーキテクチャは、コントローラ、ホストそしてアプリケーションの3つに分けられます。コントローラは、電波の送受信、パケット通信、接続管理をおこないます。高周波回路とその制御回路、専用回路またマイクロコントローラで実行されるソフトウェア、で実装されます。ホストは、Bluetoothのプロトコルやプロファイルごとの通信の多重化など、Bluetoothの複雑な通信機能を提供します。アプリケーションは、ユーザが作るアプリケーションです。この2つはソフトウェアです。

==== ホスト・コントロール・インタフェース

コントローラとホストの間に、Host Control Interface (HCI)という、コマンドとデータの通信仕様があります。HCIはコントローラとホストを、論理的に、また物理的に分離します。ホストとコントローラを1つの半導体に実装する1チップ構成と、別々の半導体で実装する2チップ構成のいずれかがとれます。

1チップ構成は、半導体チップの中にあるマイクロコントローラで実行されるソフトウェアで、コントローラの制御部分とホストが実装されます。このときHCIは、2つのソフトウェアを接続する(ライブラリ呼び出しなどの)、論理的な接続仕様として使われます。1チップ構成では、チップ内部のマイクロコントローラはユーザのアプリケーションも実行します。

コントローラをモジュール化すると、2チップ構成になります。モジュールとは、半導体や高周波回路の素子などを小さな基板に実装して部品化したものです。電波を出力する機器は各国の電波法の承認を取得しなければなりません。この電波を出力するモジュールが承認を取得していれば、機器本体で承認を取る必要がなくなる、メリットがあります。ホストは別のプロセッサで実装されます。ホストはモジュールのコントローラと、シリアル端子やSPI、USBなどの物理インタフェースを通じて、HCIで通信します。

規格にHCIがあるので、2チップ構成でも、どのメーカのコントローラでも共通に使えるようになります。例えば、パソコンでは、ホストはBluetoothスタックと呼ばれるソフトウェアで提供されます。どのメーカのBluetooth USBドングルでも、USBを通してHCIで通信することで、同じように使えます。

どのようなチップ構成でも、ユーザのアプリケーションは、ホストと同じプロセッサで実行されます。ですから、HCIの場合と違い、ホストとユーザアプリケーションの間のインタフェースは、規格に定義がありません。メーカーやOSなどの提供側が決めるもので、開発環境に依存します。

どちらの構成をとるかは、状況によります。機能が単純な周辺機器ならば、製造コストを最小にするため1チップ構成をとるでしょう。機能が複雑だったり、既存設計に Bluetooth low energy の通信機能を追加するなどで、1チップ構成ではユーザアプリケーションを処理できないならば、2チップ構成を選びます。モバイル機器やパソコンなど、モジュールを採用すれば、おのずと2チップ構成になります。

==== Logic Link Control and Adaptation Protocol

ホストのLogical Link Control and Adaptation Protocol(L2CAP)は、通信の多重化を行うレイヤです。2つのデバイス間のデータ通信を提供するコントローラを通じて、プロトコルごとに、指定したチャネルごとの独立した通信を提供します。頭文字で略すとLLCAPですが、Lが2つ並ぶのを数字で表して、L2CAP、と表記します。

iOSデバイスのBLEアクセサリの設計指針は、 スレーブからマスターへの通信パラメータの伝送は、L2CAPの接続パラメータアップデートで伝えるべきとしています。この設定を要求するのは周辺機器のみです。 設定できるパラメータは、通信を行う周期を与えるコネクション・インターバル、接続が失われたと判定するスーパービジョン・タイムアウトなどです。

周辺機器は、通信頻度や電池消費量のバランスがとれるように、適切な場面で適切なパラメータを設定します。例えば、周辺機器がiPhoneに初めて接続したときに、まとまった量のデータを一気に送信したいならば、インターバルを短くして実効通信速度をあげて、短い時間でデータを送ります。接続したあと、電池消費量をおさえたいならば、インターバルを長くします。

==== Attribute Protocol(ATT)とGeneric Attribute Profile(GATT)

iOSアプリケーション開発者が実装で直接触れるのは、ホストの上位層にある、Attribute Protocol(ATT)とGeneric Attribute Profile(GATT)です。このレイヤは、 Bluetooth low energy のサービスおよびキャラクタリスティクスを定義しています。

Bluetooth low energy の周辺機器は、サーバとして、センサの値、動作設定値、内部状態などを公開しています。 Bluetooth low energy は、ある機能をサービスという単位にまとめます。1つのサービスは複数のキャラクタリスティクスを持ちます。例えばエアコンであれば、室内温度というサービスを作り、そのなかに気温センサの値というキャラクタリスティクスをもたせる設計をしたりします。

==== ジェネリック・アクセス・プロファイル

ジェネリック・アクセス・プロファイル(Generic Access Profile, GAP)は、すべてのBluetoothデバイスが実装すべき、ベースプロファイルの実装です。GAPは、物理層からGATまでのレイヤをまたいだ、デバイスの振る舞いを提供します。

GAPは4つのデバイスの役割を定義します:

- ブロードキャスター- オブザーバ- ペリフェラル- セントラル
Bluetoothデバイスは、コントローラが対応していれば、この4つのどの役割になれます。しかし、同時に2つ以上の役割になることはできません。

ブロードキャスターは、送信するだけのアプリケーションです。 Bluetooth low energy のアドバタイジングで、データをブロードキャストします。ブロードキャスターは送信機能のみが必要で、受信機能は必要ありません。またコネクションをサポートしません。オブザーバは、受信するだけのアプリケーションです。オブザーバには受信機能のみが必要で、送信機能とコネクションは不要です。

ペリフェラルは、単1の接続をサポートします。コントローラのスレーブのみをサポートします。セントラルは、すべてのペリフェラルとの接続を開始して、複数の接続を管理するものです。

役割により必要な機能が異なるので、必要な機能だけを実装することで、製造コストの削減などができます。例えばブロードキャスターであれば受信回路やその制御機能をすべて削除することもできます。しかし実施には、設計開発から販売管理までを含めたコストから、セントラルに対応したデバイスのみが販売されています。

====　セキュリティとプライバシー

通信技術には、想定される人間の悪意や犯罪行為に対抗できる、強固なセキュリティの確保とプライバシー保護の技術が必要です。

機器を電線で接続しなくても利用できたり、あるいは近づけるだけで通信ができる無線通信は、無線LANや電車の自動改札などで日常的に利用しています。通信では、クレジットカード情報のような課金などの重要な情報もやりとりされているので、不正な利益を得ようとする人も出てくるかもしれません。

無線通信は電波で通信しますが、電波は四方八方に広がっていきます。ですから、誰かがこっそり通信を傍受して、自分しか知らないはずの情報をこっそり盗みだすかもしれません。あるいは、外部から電波を送って機器を不正に操作したりするかもしれません。

==== 無線通信の利用場面と暗号化技術

通信のセキュリティ技術に、認証 (Authentication)と 認可 (Authorization)という2つの単語があります。認証は、通信相手が正しい相手であることを確認する方法のことを言います。認可とは、認証により確認されたものに対してアクセス権限の制御を行い、相手に固有のサービスを提供することを言います。

認証や認可の仕組みは、通信する機器同士がお互いに知っていなければならないものですから、通信規格が提供しなければなりません。しかし、認証や認可をどう使うかは、利用場面にあわせて設計するものです。

例えば、スポーツジムにあるトレーニング装置からスマートフォンに心拍データを取得する一時的な利用であれば、すぐに使えることが便利ですから、だれでも利用できるように設計します。その場合は認証の仕組みを使うことはないでしょう。ですが、個人が所有する心拍センサーであれば、他人が勝手に接続してデータを読み取られるのは嫌なことですから、認証の仕組みを必ず入れるでしょう。

無線通信は、人間であれば目を閉じて声だけで周囲と会話するようなものです。人間であれば声色で相手が誰かを判定できますが、電波には人間の声色のような機器に固有の情報はありません。無線通信の認証と認可は、暗号化技術で実現されています。

==== 無線通信への攻撃方法

Bluetooth無線技術は、次の悪用や攻撃方法を想定しています [^1310]。

- 受動的な盗聴 (passive eavesdropping)- トラッキング (tracking)- 中間者攻撃   (man-in-the-middle attack, MITM)

[^1310]: [​Security, Bluetooth Smart (Low Energy), △https://developer.bluetooth.org/TechnologyOverview/Pages/LE-Security.aspx](https://developer.bluetooth.org/TechnologyOverview/Pages/LE-Security.aspx)☆

電波は周囲に広がるうえに、Bluetooth無線技術は規格化された技術なので、電波を受信して通信内容を解析することはとても容易にできます。

まず、受動的な盗聴は、受信するだけの盗聴です。Bluetooth Smart機器の通信は最大でも50メートル程度ですが、指向性の高いアンテナと感度の良い受信装置を使えば、その通信距離よりもはるかに遠距離から盗聴することもできます。受動的な盗聴に気づくことは困難です。

受動的な盗聴で、トラッキングができます。Bluetooth無線技術は利用者が常に身につけたり持ち歩く機器に使われます。機器がやりとりするパケットには、返信するときに必ず必要になる発信元の識別情報が入っています。その識別情報をたどっていくと、ユーザがどこにいたかというプライバシー情報が収集できるかもしれません。

また、能動的に電波を送信することもあります。Bluetooth Smart機器が通信しているタイミングに合わせて、正当なパケットを打ち消すほど強力な電波を送信して、パケットのやりとりの間に割り込み、不正に情報を引き出したり機器を操作するかもしれません。

このような高度な技術を使わなくても、攻撃できる場合もあるでしょう。ユーザが近づいただけで反応するBluetooth Smart機器であれば、受信した電波を再送信する中継装置のようなものを使えば、暗号化に関係なく機器を遠方から反応させられるでしょう。これはユーザが近づいただけで機器が反応するという設計がもたらす脆弱性で、無線規格では対応ができないものです。

==== ペアリングとボンディング

Bluetooth low energyは、AES(Advanced Encryption Standard)というアメリカ国立標準技術研究所が公開している共通鍵暗号化方式を使います。AESの鍵長は128ビット���192���ッ���、そして256ビットの3つが選べますが、Bluetooth low energyは128ビットの鍵長を使います。

共有鍵暗号化方式とは、同じ鍵で暗号化と復号化とができる暗号化方式です。暗号化に使う鍵それ自体を通信相手に渡して共有するために、共有鍵暗号化方式と呼ばれます。

Bluetooth low energyは、2つの機器間でこの鍵を交換する手順をペアリング、交換した鍵を保存して再接続してもセキュアな接続が続けられるようにすることをボンディングと呼びます。

通常はペアリングをするならばボンディングもするように設計しますが、ペアリングはするがボンディングはしない設計も可能です。例えば、スポーツジムにある共有機器で、使用中はセキュアな接続をさせたいが同じ機器を継続して利用することはないならば、ペアリングはするがボンディングはしない設計が使いやすいでしょう。

スマートフォンとBluetooth Smart機器とをペアリングするときに、PINコードと呼ぶ6桁の数値を入力することがあります。このPINコードは、鍵を交換する通信を暗号化するテンポラリ鍵に使われます。Bluetooth Smart機器は、ペアリングでPINコードを入力させないようにも設計できます。このときはPINコードは0であると扱われます。

6桁のPINコードは、強固なセキュリティとはいえません。もしも鍵を交換する通信が受動的に盗聴をされていると、そのデータにPINコード0から999,999までを総当りで解析するだけで、鍵そのものを取り出せます。6桁の数字を2進数で表現すると20ビットです。鍵長が20ビットの暗号化通信の解析には、1分もかからないでしょう。

Bluetooth low energyは128ビットの鍵長を使いますが、この鍵長であれば総当りでは解析に何千億年もの時間がかかり、解読すること自体が現実的ではなくなります。もしもPINコードを128ビット長にしようとすると、ランダムな英数小文字を24文字入力しなくてはなりません。これほどの文字数ではタイプミスばかりして、不便でしかありません。

そこでBluetooth low energyは、人間によるPINコード入力以外に、NFC (Near Field Communication)やQRコードなどの、無線通信以外の方法で128ビット長のテンポラリ鍵を交換する方法も提供しています。セキュリティを求めるならば、これらも検討します。

共有鍵暗号化方式では、どうしても鍵それ自体を相手に渡さねばなりません。そこでBluetoothコア仕様4.2では、Bluetooth low energyにも公開鍵暗号化方式がとりいれられました。公開鍵暗号化方式は、暗号化に使う公開鍵と復号化に使う復号鍵が別々の鍵になる方式で、通信相手には公開鍵だけを渡します。秘密鍵は通信でやりとりされないので、もしもペアリングを受動的に盗聴されていても、秘密鍵は盗み出せません。

Bluetooth low energyの認証および認可は、1つ1つのパケットの単位でおこなわれます。AESは、128ビットのデータを1ブロックとしてブロック単位で暗号化する方式です。ですから、ブロックの値が同じであれば、暗号化された値も同じになります。Bluetooth low energyは、パケットが同じデータを運んでいても、暗号化データは全く違う値になるように、また同じ暗号化データが現れることがないように、ブロックに通信開始ごとにランダムに割り当てる値とパケットごとに割り当てるシーケンス値も混ぜ込みます。

受動的な盗聴への対策として、パケットの暗号化、またGATTでキャラクタリスティクスの暗号化ができます。通信全体を暗号化すると暗号化処理の重さや消費電力の増加が問題となる場合や、特定のキャラクタリスティクスだけを保護したいならば、GATTのキャラクタリスティクス単位でそのデータを暗号化する手段がよいでしょう。

トラッキングへの対策として、パケットのやりとりのために必ずパケットに入る発信元アドレス値を、ランダム値に変更することができます。ペアリングをした機器は、認証した機器かどうかを、ランダム値から鍵を使い判定できます。受動的な盗聴をして発信元アドレス値を集めても、鍵を持たないならば機器とアドレス値の対応づけができないので、トラッキングへの対抗になります。

受動的な盗聴と能動的なパケットの差し込みを行う中間者攻撃への対策は、通信の暗号化以外にも、GATTのキャラクタリスティクスごとの認可でも対策できます。例えば、キャラクタリスティクスに認可があるものだけが書き込みが可能という属性をつけておけば、鍵を使い生成する正しい署名データがあるものだけが、書き込みできます。

#@# === エコシステム

#@# 規格の認証、特許、知財の管理。商標。

#@# SoC、集積回路、コントローラ、ホスト、それぞれが認証の部品として。組み合わせて使える。
#@# 開発環境、組み込み、小さなマイコン。Linuxやら、スマホ。端末やらはOS自体で、周辺機器側。
#@# モジュール、無線通信の認証、機能を。水晶の精度。製造でそれらを保つ。性能が少し異なる、ではなくて、電波の品質に関わるもの、電源、部品の精度、温度や湿度や振動、



















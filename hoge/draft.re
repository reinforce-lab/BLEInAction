= Bluetooth Low Energy技術を知ろう

#@# 無線通信規格は、世界にある様々なものがお互いにおしゃべりをするための共通基盤、つまり部品にすぎません。ですから、まず最初におこなうべきは、この無線通信規格を部品として、何に用いるか、どのように活用するかを明らかにすることです。

#@# まず、Bluetooth Low Energy技術の楽しみ方を見て行きます。次に、この技術の利用場面や活用方法を見ていきます。超低消費電力無線通信技術や低い製造費用、さらにはスマートホンとそのアプリケーションと、無線通信規格を基盤にして、いくつもの要素が互いに発展しながら、今あるBluetooth Low Energy技術の活用場面は形作られて来ました。それぞれの活用場面を見ていくことで、この無線通信規格の特徴とその活用方法がよくわかるはずです。

#@# そして、Bluetooth Low Energy技術と自分との関わり方、そして目的と動機をはっきりさせます。趣味や好奇心あるいは学習や業務あるいは事業立案や製品企画まで、この技術との関わり方は人それぞれです。そして目的と動機がはっきりすれば、その目的から逆に道を辿ることで、その目的にたどり着くまで最短経路と必要な時間がわかります。

Bluetooth Low Energy技術の全体像は、チームで新たな利用場面を考える時や製品の立案では、欠かせない知識です。

Bluetooth Low Energy技術は、時代が求める利用場面に素早く応え続けている無線通信規格です。この技術の利用場面は、スマートホンのアプリケーションとの連携から始まりました。ほんの数年あまりの間に、近接と位置検出に向けた技術拡張や、通信速度の高速化、スマートホームに向けたネットワーク技術など、いくつもの技術が導入されています。これまでの規格の推移から、この技術で今できること、そして今後できるようになるだろうことを見ていきます。

Bluetooth Low Energy技術の通信の流れの理解は、ハードウェアやアプリケーションなどの全ての開発担当にとって必要です。Bluetooth Low Energy技術は、無線通信からデジタル・データの扱い方に至るまでを統合した無線通信規格です。したがって、ものにこの技術を組み込むには、この技術でのデジタル・データの扱い方を知る必要があります。この技術でのデジタル・データの役割を、通信の流れを通じて見ていきます。

そして、開発過程では様々なことが起きます。開発したハードウェアとアプリケーションとを、初めて通信させる時に、すべてが問題なく動くことは少ないでしょう。通信でつながり1つの複合体となったハードウェアとソフトウェア、その複合体に発生した問題に向き合うには、それぞれの開発担当が手を取り協力しなくてはなりません。そこでは、通信パケットを記録して、その通信の流れから振る舞いを読み取ることが、問題解決の糸口になります。

== 通信の流れとその処理系

=== 無線通信装置で遊んでみよう

遠く離れた場所にいる誰かと会話ができると、不思議と心躍るものです。子供の頃に、2つの紙コップの底に糸を接着して糸電話を作ったことはないでしょうか。

お互いに少し離れて声が聞こえる不思議さを楽しめます。糸を分岐させて、もっとたくさんの相手と同時におしゃべりできるように試みたかもしれません。もっと遠くまで声を届かせようと糸を長くして、大きな声で叫ぶと、直接叫んだ方が遠くまで届いてしまったかもしれません。手に入りやすく安価な材料で作れますから、壊すことを恐れる必要がなく、自分なりの思いつきや工夫を好きなだけ試せます。

電波を用いた無線通信も、楽しめるものです。今、目の前に1組の小さな箱があると想像してください。その2つの箱には、それぞれに小さなスイッチ、そしてランプとブザーとがついています。この箱のスイッチを押している間、電波が送信されます。そして、電波を受信している間は、箱のランプが点灯してブザーから音が出ます。

2つの箱を並べて、一方の箱のスイッチを押してみます。もう一方の箱のランプが点灯して、ブザーからぶーっと音が出続けます。もう一方の箱のスイッチを押せば、もう片方のランプとブザーが動作します。この1組の箱が、素朴な無線通信機です。スイッチを押すだけの操作しかありませんが、2つの箱それぞれの側にいる人が、スイッチを押すことに意味をつけると、様々な利用場面が生まれます。

例えば、この箱を家の玄関脇に置いておきます。来客者が玄関脇の箱のスイッチを押せば、ブザーがなりますから、これは来客を知らせるブザーになります。利用場面が1つしかなければ、スイッチを押すだけで意味が伝わります。

移動している相手と常に連絡を取り合えるのは、無線通信ならではの使い方です。ただ、来客を知らせるブザーと違い、スイッチを押すだけでは、相手が何を伝えたいのかは分かりません。トントントン・ツーツーツー・トントントンのような、箱のスイッチを短く押すのと長く押すのとを組み合わせて、文字を表す符号を決めておけば、文章が送れるようになります。

この2つの箱で、いろいろな遊びができます。まずは、通信距離の競争です。箱が遠く離れるにしたがい、ランプやブザーが途切れるようになり、ついには光ったり音が出なくなります。建物や水の中など、周りに物質があると届きにくくなります。高い建物の屋上や風景の良い山頂といった、遠くまでを直接見通せる場所にいくと、さらに遠くまで届くようになります。

狐探しという遊び方もあります。1つの箱を、スイッチの上に石か何かを置いて電波が出続けるようにして、どこかに隠します。もう1つの箱で、その隠された箱を探すのです。高いところに登れば、広い範囲を探索できますが、見える範囲のどこに箱が隠されているのかが絞り込めません。金属は電波を通しませんから、台所にあるアルミホイルを段ボールに貼り付けた板を作り、箱の周りにうまく板を置いて、電波がくる方向を絞り込んでいけます。

箱をもっと増やしてみます。どれか1つの箱のスイッチを押せば、その他の全ての箱のランプとブザーが反応するとします。誰か1つの箱を放送局だと決めれば、その周りにいる人たちの箱に放送ができます。スイッチの押し方を工夫して、ブザーの音をうまく変えて、音楽のような音や人の話し声のような音が出せるかもしれません。音声や動画像は0と1のデジタル・データの流れで表現できますから、これを発展させていけば本格的な放送もできるでしょう。

自分も放送をしてみたいと、誰かが手元の箱のボタンを押し始めると、それぞれの放送が混じり合います。それぞれの放送局を共存させるならば、狐探しで体験したように、それぞれの放送局を箱からの信号が届く距離よりも遠くに離して配置したり、受信側を特定の方向の信号だけを検出するように工夫するします。

=== 無線通信装置を活用しよう

電波の送信と受信ができる1組の箱で、様々な遊び方ができました。遊びの中で、様々な工夫を試して、その試行錯誤の中から、発見をしたり新たな遊び方を思いついたりします。次は、この箱を、人の役に立ててみます。

#@#電報サービス
1組の箱でできることで、まず思いつくのが、誰かの依頼で伝言を伝えることです。箱にはスイッチとランプとブザーしかありませんが、ボタンを押す時間の長短の組み合わせを符号にして、符号と文字との対応を人が覚えれば、文字のやりとりができます。

符号を扱う技能は、訓練と習熟が必要で、誰でもすぐにできるものではありません。ですから、 箱の前には技能を身につけた方を配置して、伝言を送ってもらうようにします。無線通信で伝言を伝えるサービスは、手紙という形あるものを運ぶ郵便とは比べものにならないほど、相手に情報を早く伝えられます。ですから高い料金でも利用者が集まるでしょう。その料金から技能者に賃金を支払い、サービスの提供を継続できそうです。

ですが、1組の箱だけでは、1日に伝えられる伝言の量は限られます。かといって、箱を増やしても、送信する信号が混じりあい混信するだけですから、伝えられる伝言の量は増やせません。また、有線でも伝言を伝える仕組みは作れます。小学校の理科の実験で、乾電池に豆電球や発光ダイオードをつないで光らせる実験をしたかもしれません。それと同じように、拠点間に長い電線をひっぱり、一端にスイッチを、もう一端に発光素子をつなげば、スイッチを押せば遠く離れた発光素子が光り、伝言を伝えられます。有線ならば、電線の数を増やせば増やすだけ、送信する伝言の量を増やせます。

では、箱を使った伝言サービスは、有線を使うサービスに負けてしまうのでしょうか。もしも、1対の箱同士だけで通信する、他の箱の信号には反応しない新たな箱が開発されたならば、競争できるかもしれません。サービスが登場してそれが発展していくと、そこから次の要望が生まれて、箱の機能や性能への要望も次々に出てきます。

あるいは、有線では実現ができない活用場面に進出するのもよいかもしれません。船舶のように移動するものには電線が渡せません。船舶が大海原に出航しても、常に船がどこにいるのかが連絡できて、また船舶に乗船している人に、次の寄港をまたずとも伝言を伝えられます。ただし、この利用場面では、広い海原のどこかにいる船舶との安定した通信が求められます。

この利用場面では、直線での通信距離はもちろんですが、地球という球面に沿った長い通信距離が必要でしょう。また、他の箱と通信が混らないように、通信をする時間の割り当てや調整が必要でしょう。さらに、ある船舶向けの通信は、その他の箱でも受信できてしまいますから、通信内容が広く知られてしまいます。他人には知られたくない伝言や連絡のやり取りには、使えないかもしれません。

#@#放送サービス
箱を使ったサービスは、他にも考えつきます。箱にはランプとブザーしかついていませんが、スイッチの押し方の工夫でブザー音を音楽や人の声のように調整できれば、符号を読み取る技能がない一般の方でも楽しめるようになります。街全体を見渡せる高い建物の屋上や山頂に箱を設置すれば、街のどこにいても受信ができるでしょう。これで放送サービスが開始できます。

放送サービスでは、どうやって料金を受け取ればいいでしょうか。伝言サービスは、利用者から伝言を受け取る時に料金も受け取れます。ですが、街のどこでも受信して楽しめる放送サービスは、どこに利用者がいるのかすら分かりません。

受信するための箱の販売代金に、放送の利用料金を含めてみてるとどうでしょうか。サービスが広がり、どんどん箱が売れる間は、放送に必要な費用を賄うことができますが、十分に普及して新たに箱が売れなくなると、放送の費用が賄えなくなり、そのうちサービスが停止します。

箱を持っている家を訪問して、利用料金を回収してもいいかもしれません。どのくらい放送を聞いているかは調べようがありませんから、箱を持っていれば月ごとに料金を支払わなければならないとルールを作り、そのルールに則って料金を回収すればよいのです。料金徴収に大変な費用がかかりそうですが、放送を維持する継続した収入になりそうです。

利用者から料金を徴収するのではなく、放送の番組の間で商品の広告を行い、その広告費で放送を維持することもできそうです。広告を出したい人を集めて、広告のための放送内容を作り、それを放送するのです。放送は街という面に広がるものですから、その広告は街という広い範囲で一度に商品を知ってもらえます。きっと高い広告費が見込めるでしょう。

放送サービスが広く知られるようになると、街の家庭それぞれにまで行き渡るほどの、大量の箱が求められます。安価で故障しない箱の製造とその販売が求められます。また、箱のスイッチを押せば、放送と混ざってしまいます。ですから、普及版の箱からは、スイッチがなく送信する機能がなくなるでしょう。

放送が、それを楽しむ人達がいて料金を集めることができるとわかれば、いろいろなところが放送サービスを始めようとするでしょう。放送は、高いところで箱のスイッチを押すだけで始められますが、それでは信号が混信して何も受信できなくなります。誰でもできることに秩序が必要となると、社会的に放送をどうするのかを話し合い、合意を形成して、法律や規則などでの仕組み作りとその運営が必要です。

=== Bluetooth Low Energy技術の位置付け

#@# 通信という形。

#@# 常に箱の入力と出力は人が見ているけど、これが機械になっていく。機械と機械とがおしゃべりをする。
#@# 端に何があるのか。


#@# 電信、放送、そして高度なデジタル通信の時代。個人が電波を発信する時代。設備で持っている、受信するだけ。モバイル、小さな。基地局、通信できる範囲は様々だけど大きくて数キロメートル、全国に配備した、それを月額料金で賄う。

#@# 料金体制は、結構ハードウェア販売が多いか。サービスかもできるはずだけど、機材を渡しちゃうからなぁ。


#@# 面の広さで、一括情報を伝える形(ブロードキャスト)。通信するタイプなのか。
#@# 情報を持っているのは何か、通信と情報を持っている何かは同じか、異なるのか。
#@# 通信相手は何か。物理的に通信している相手なのか、ネットワーク端末の一部でしかないのか。
#@# 端にあるのが、人なのか、機械なのか。
#@# 課金の仕組みは。使用料金を支払わないとアクセスできない通信路なのか、ハードウェア販売価格なのか。

#@# 拠点があって、そこにアクセスする形。
#@# 拠点が、固定型と、移動型。
#@# 情報の集約点があるタイプと、ないタイプ。

#@# それぞれが、それぞれに、適時繋がり使われる形。

#@# 無線通信規格、電波で情報をやり取りする方式、デジタルデータの意味など結構複雑、
#@# ハードウェアに埋め込むから、設計、製造、出荷、流通販売、使用、破棄。10年単位。製品寿命、未来の機器と通信できること。そこは信頼の証。

#@# じゃBLEは?
#@# 2.4GHzという周波数帯域、各国で異なるけど、かなり共通して使われる。

#@# 周波数の幅に分けて、同時に通信できるように。細切れにしている周波数の幅の中で、隣り合う部分の信号は、回路でフィルタすることで。

#@# 電信、放送、
#@# 今はそれぞれが高度なデジタルデータの通信、サービスはそのままでも技術内容は進歩している、身近なところでは。
#@# 携帯電話、WiFiご家庭、BLE。

#@# 通信を使う何かは、用途があること、技術が用途を満たしていること、社会的な取り決めで運用されること、が必要です。

#@# BLE、最大でも100メートルくらいの範囲の。高密度と言っても、隣の家とはかぶるかもしれないし、かぶらないかもしれない。街の端から端まで届くことはない。狭いような、そんな感じの。
#@# 通信を中継して、地球の裏側に届けることはない。
#@# 固定した何か、モバイルホン、中心点はそれ。その周囲に、それらがあること。

#@# 2.4GHz、国をまたいで電波が飛ぶようなことはないけど、機材の製造と流通で。国ごとに電波の使える範囲、周波数の割り当てが異なると、いくつもの種類を作る、ちょっと手間。それがないのは便利。国を旅行しなくても、機材は1つで世界に販売できるなら、開発の手間がちょっとへる。

#@# 光や超音波、テレビのリモコンは、超音波式とかあったよね。今は、赤外線方式が多い。これは何がいいかというと、安い。めちゃくちゃ安い。無線の回路は、やっぱり高い。部屋の中で閉じるから、セキュリティとかないし、信号を飛ばして受けるという単純一方向。でも赤外線リモコンって、あまり使われるところは他にない。あと、人が目で見て操作するから、一方向でいい。結構、性質がリモコンにはハマるけど、IrDAが廃れたように、双方向の汎用でかつ屋外でも使う用途ととなると、まるでダメ。光の性質だね。

=== Bluetooth技術の規格とその発展

==== 無線通信規格の必要性


#@# 30年ほど前のパソコンの後ろ側には、DーSUB、細長いのプリンタポート、シリアルポート、キーボードやマウスを接続する丸い端子、モニタ端子、電源ケーブルの接続部分、オーディオ端子など、用途ごとに並んでいた。

#@# パソコンの裏側を見ると、今はUSB、USB Type-C。電源くらい。USBの中は、高速のシリアルデジタル通信と電源供給で、配線で繋がったききに電力を送り、データをやり取りする。とても高速な通信までできるので、マウスやキーボードといった低速通信で必要が満たせるものから、ハードディスクあるいはモニタといった高速通信が求められる分野にまで、その利用範囲を広げている。

#@# ハードウェアの仕様側から湧いてきたインタフェースは、そのハードウェアが動けばいいのだから、そのように仕様を作る。業界団体、支配的な企業が出した何か、
#@# #@# 汎用の基盤としての無線通信規格の必要性



#@# 抽象化されて、通信と電源供給という部分、あとは多種多様なものを収納できるようになっている。
#@# 周辺機器のハードウェアはそれ向けに設計して、OS自体あるいはデバイスドライバで、その機器とのやり取りつまり機能をソフトウェアに提供している。柔軟な部品。

#@# 無線でも同じ。電力供給はできないから、通信という機能。その上で、何かを行う。1対の無線通信の何かならば、1つの会社が作ったもの、部品として採用してもいい。その製品で閉じているのだから。


#@# 無線通信規格は、
== 無線通信と通信規格

通信とは、一方向もしくは双方向に情報を伝えることです。通信には、必ず送り手と受け手がいます。送り手と受け手とが事前に知っている通信のための規則が通信規格です。規格には、情報を物理的にどのように表現するか、またその信号をやりとりするタイミングや情報の意味などが含まれます。

通信は必ず相手があり、単1のハードウェアで完結しないため、通信システムが一般で使われるには、製品間での相互接続が重要です。そのために、通信規格および規格認定機関などの運用が不可欠なのです。

=== プロプライエタリな通信規格とスマートフォン

通信規格は、複数の企業が規格を監督する非営利団体を作るなどして、一般に開かれたものとする規格と、1社もしくは複数の会社が仕様を決めて、それらの会社群の製品群間で利用するプロプライエタリ(Proprietary)な規格があります。

電波を送信する側と受信する側が決まっているような利用場面では、プロプライエタリな規格が有利になります。例えば、パソコンに使われるワイヤレス・マウスは、USBに挿した専用レシーバとマウスの間で無線通信をしますが、それにはプロプライエタリな通信規格がよく使われています。

プロプライエタリな規格は、自社だけですべてを決定できるので、短期間で規格をまとめあげられます。そして、用途が絞り込めるので、用途に特化したり簡素化した無駄がなく利用場面にあわせた規格が作れます。

例えばマウスであれば、電池消費量が小さい無線通信にすることで、電池交換の手間が少なくできます。通信再開がすばやくできる仕組みがあれば、マウスを動かせばすぐに画面のマウスカーソルが動く違和感のない操作ができます。そのような作りこみが、製品の高い競争力になります。

ですが、スマートフォンには、プロプライエタリな通信規格が採用できません。スマートフォンは、パソコンのようにUSBでハードウェアを拡張して使用することは、まずありません。ですから、プロプライエタリな通信規格を採用した周辺デバイスをスマートフォンで使おうとすれば、スマートフォンが初めからその規格に対応していなければなりません。

もしもスマートフォンを、製造原価を押し上げてでもプロプライエタリな通信規格に対応させるとするならば、それがスマートフォンのユーザにとって魅力的でなければなりません。ですが、プロプライエタリな通信規格に対応した周辺デバイスは、特定の会社群が販売する製品に限定されますから、それほど多種多様とえるほどはありません。多くのユーザが使う汎用的なものでなければ、わざわざそのためのハードウェアを搭載することはありません。

=== 無線通信規格の役割

無線通信規格には:

- 0/1のデジタル信号を電波で送受信する技術
- 接続先の検索と選択の技術
- 正規の接続先や利用者だと認証する技術
- 認証していない何者かが電波から情報を読み取れないセキュリティ技術
- 他の無線通信や電波使用機器との共存性
- データ形式や機器の振る舞い

が求められます。

まず、通信規格には必ず変調方式があります。ここでの無線通信は、電波で0/1のデジタルな情報をやりとりするものとします。アナログ信号である電波で、0と1のデジタル信号を表現するために、電波の振幅や周波数を時間変化(変調といいます)させます。

次に、通信規格には必ず接続先の検索と選択方法が規定されています。ユーザには接続したいデバイスと接続先のデバイスが目に見えていていて、無線で接続するものだと予想しているので、無線通信で2つのデバイスがつながるのは当たり前だと考えます。ですが、デバイスにとっては、お互いの存在すら電波をやりとりしなければわかりません。

そして、通信規格には必ず正規の接続先や利用者だと確認する認証と、知られてはいけない情報を知られないようにするセキュリティの確保、また他人に知られたくない個人のプライバシーを保護する仕組みがあります。

人間には電波を見たり聞いたりできる知覚能力はないので忘れがちですが、送信した電波は四方八方に広がっていきます。

無線で接続した周辺デバイスが送信する電波は、その周囲にいるだれでもが受信できます。また、周囲にいる誰かが、周辺デバイスと偽った電波信号をスマートフォンに送信してくることすら想定されます。

さらに、通信規格には他の通信規格と共存できる技術が必要になることがあります。電波は周囲に勝手に広がるものなので、各自が好き勝手に電波を使用すると混信してしまします。ですから、電波は公共の資源として周波数区分による割り当てと、送信電力や電波の品質が規定されて管理されます。

周波数の割り当ては、用途を決めて割り当てられるライセンスド・バンドと、専用の割り当てを受けなくても利用できるアンライセンスド・バンドがあります。Bluetooth low energy は 2.4 GHz帯のアンライセンスド・バンドを利用しています。この周波数帯は、 無線LAN や Zigbee などの無線通信、電子レンジ などの高周波加熱などの用途で、様々な機器が混在して使っています。

多種多様な機器が混在する周波数帯を利用するため、他の無線通信機器の通信に影響を与えたり、逆に影響を受けて通信ができなくならない技術が必要になります。また、電子レンジのような通信以外に電波を利用する機器が周囲にあっても、デバイスの利用が邪魔されない工夫も必要です。

そして、通信規格がデータ形式やデバイスの振る舞いまで仕様を決めることが必要になることもあります。無線通信は2つのデバイスが相互接続するための技術です。用途が決まっている周辺デバイスは、機能や振る舞いを設計してハードウェアとして作っていきます。ですから、出荷後に周辺デバイスの機能を変更することは、まずできません。ですから、やりとりするデータがどのような形式でどのような意味をもつのか、また周辺デバイスがどのように動作するのかまでが、通信規格の一部として提供されていなければ、設計ができません。

=== 無線LANとクラシックBluetooth

身の回りには、すでに 無線LAN や Bluetooth などの無線通信技術を採用した製品がたくさんあります。スマートフォンは必ず無線LANとBluetoothを搭載していて、インターネット回線として、あるいはヘッドセットとの接続にと、様々な使い方をしています。

無線LANとクラシックBluetoothがどのような技術なのかを簡単に見てみます。ここではBluetooth low energy と区別するために、Bluetooth3 までの従来からあった Bluetooth を クラシックBluetooth と呼びます。

無線LAN はビット・データを、より高速にまた省電力で通信するかに注力した技術です。自宅であれば、インターネットに接続できるWi-Fiアクセスポイントを設置しているでしょう。手元の端末 から 無線LAN を通じて、インターネット標準のプロトコル群 TCP/IP (Transmission Control Protocol/Internet Protocol) で、世界中のサーバと通信できます。

無線LAN に接続してブラウザにどこかのホームページを表示するまでの手順を見てみます。まず無線LANアダプタの電源をオンにして、周囲にあるアクセスポイントを検索します。アクセスポイントに接続を試みると、勝手に他人に使われないように、パスワードの入力を求められます。ユーザがこれらの設定手順を間違いなく実行して、接続できます。

このように無線LANを使うには、接続先の検索と選択、正規の利用者だと確認するセキュリティがあります。

ですが、インターネットを通じて世界中のサーバと通信できるだけでは、意味はありません。動画を見たりファイル交換などアプリケーションが利用できて初めて、意味があります。

例えば、YouTubeで動画を見ているとします。このとき、YouTubeのサーバから動画像のデータが逐次送られてきます。そのデータを、ブラウザのプロセス内の動画像データのデコーダが処理して、画面に動画を表示します。パソコンは、様々なアプリケーションをインストールして実行できるので、ウェブブラウザやファイル・ダウンロードなど、様々な通信の利用場面に使えます。

無線LAN で通信を様々な用途で利用できるのは、任意のアプリケーションをインストールして実行できるパソコンで利用するからなのです。

いっぽう、クラシックBluetoothは、数メートルから数十メートル程度までの距離の隣接するデバイス間で、高速通信を省電力で提供する技術です。ハンズフリー通話に使うヘッドセットなど周辺機器との無線通信によく使われています。

クラシックBluetooth でヘッドセットをiOSデバイスに接続して通話するまでの手順を見てみます。まず双方の Bluetooth をオンにします。ヘッドセットをペアリング・モードにすると、ヘッドセットが周囲に自機の情報を送信しつづけるので、iOSデバイスでヘッドセットが発見できます。iOSデバイスからヘッドセットに接続を試みると、PINコードの入力を求められ、接続します。一旦ペアリングをしておけば、無線接続が切断しても、再度接続可能な状態になると自動で再接続できます。

クラシックBluetoothを使う場合でも、無線LANと同じように、接続先の検索と選択、正規の利用者だと認識するためのセキュリティの仕組みが入っています。

クラシックBluetoothは周辺デバイスとの接続に使われる技術です。周辺機器は特定用途に特化したハードウェアですから、その機器の機能や振る舞いは設計段階で作りこまれます。無線LAN でのように、あとからアプリケーションをインストールして任意のアプリケーションを実行することはありません。

ですから、周辺デバイスを設計するためには、データ形式や機器の振る舞いまでが規格になっていなければなりません。アプリケーションまで包括した仕様が規格化されてはじめて、ヘッドセットやiOSデバイスなど様々な会社が設計製造したデバイス間での相互接続が保証できます。

例えば、ヘッドセットは電話の着信や発信の操作、そして通話音声の双方向のやりとりをするハードウェアです。その機能や振る舞い、そしてデータ形式は [ハンズフリー・プロファイル (Hands-Free Profile)](@<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/HFP.aspx}) [^2030] で決められています。

[^2030]: [Hands-Free Profile, @<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/HFP.aspx](https://developer.bluetooth.org/TechnologyOverview/Pages/HFP.aspx})

ヘッドセットに音楽を聞く機能も入れたければ、ハンズフリー・プロファイルに加えて高音質の音楽データを送る
[Advanced Audio Distribution Profile (A2DP)](@<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/A2DP.aspx}) [^2040] も実装します。

[^2040]: [Advanced Audio Distribution Profile (A2DP), @<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/A2DP.aspx](https://developer.bluetooth.org/TechnologyOverview/Pages/A2DP.aspx})

クラシックBluetoothは、用途ごとに様々なプロファイルが規格として決められており、通信の双方が同じプロファイルを実装することで相互接続が確保されます。プロファイルが定義されていない場面には、仮想シリアル通信のプロファイル [Serial Port Profile (SPP)](@<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/SPP.aspx}) [^2050] を使います。

[^2050]: [Serial Port Profile (SPP), @<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/SPP.aspx](https://developer.bluetooth.org/TechnologyOverview/Pages/SPP.aspx})

==  Bluetooth low energy のアーキテクチャ

Bluetooth low energy のアーキテクチャを階層表示したのが [#fig_ble_protocol_stack] です。通信技術は異なる機種間でデータをやりとりする技術です。0/1のビット・データのやりとりにはじまり、接続管理やビット・データのかたまりの意味づけなど、いくつもの役割が組みあわさって、はじめて通信ができます。Bluetoothは、通信の手順やデータ構造をプロトコル、機器の振る舞いをプロファイル、と呼びます。

![ #fig_ble_protocol_stack Bluetooth low energyのプロトコル・スタック](fig/ch02_ble_protocol_stack.png)

物理層からGATTまでの階層は、それぞれ下層の機能を使って、相手の同じ階層のプロトコルと通信します。ジェネリック・アクセス・プロファイルは、機器の振る舞いを定義します。機器の振る舞いは、物理層からGATTまでのレイヤそれぞれの役割を通じて実現されるので、ジェネリック・アクセス・プロファイルは、特定のレイヤのものではなく、物理層からGATTまでの全てのレイヤに影響を与えます。物理層からGATTまでの階層は、相手の同じ階層のプロトコルと通信します。レイヤの役割は以下のとおりです:

* Generic attribute profile (GATT, ジェネリック・アトリビュート・プロファイル)
** サービス/キャラクタリスティクスを提供。
-Attribute protocol(ATT, アトリビュート・プロトコル)
** アトリビュートという値をやりとりする
* Logical Link Control and Adaptation Protocol(L2CAP, ロジック・リンク・コントロール・アンド・アダプティブ・プロトコル)
** 論理チャンネルの提供
* Logic link(ロジックリンク)
** 近接デバイスの発見と接続、通信
* Physical layer(物理層、フィジカル・レイヤ)
** 無線通信

=== コントローラとホスト

Blueoothのアーキテクチャは、コントローラ、ホストそしてアプリケーションの3つに分けられます。コントローラは、電波の送受信、パケット通信、接続管理をおこないます。高周波回路とその制御回路、専用回路またマイクロコントローラで実行されるソフトウェア、で実装されます。ホストは、Bluetoothのプロトコルやプロファイルごとの通信の多重化など、Bluetoothの複雑な通信機能を提供します。アプリケーションは、ユーザが作るアプリケーションです。この2つはソフトウェアです。

=== ホスト・コントロール・インタフェース

コントローラとホストの間に、Host Control Interface (HCI)という、コマンドとデータの通信仕様があります。HCIはコントローラとホストを、論理的に、また物理的に分離します。ホストとコントローラを1つの半導体に実装する1チップ構成と、別々の半導体で実装する2チップ構成のいずれかがとれます。

1チップ構成は、半導体チップの中にあるマイクロコントローラで実行されるソフトウェアで、コントローラの制御部分とホストが実装されます。このときHCIは、2つのソフトウェアを接続する(ライブラリ呼び出しなどの)、論理的な接続仕様として使われます。1チップ構成では、チップ内部のマイクロコントローラはユーザのアプリケーションも実行します。

コントローラをモジュール化すると、2チップ構成になります。モジュールとは、半導体や高周波回路の素子などを小さな基板に実装して部品化したものです。電波を出力する機器は各国の電波法の承認を取得しなければなりません。この電波を出力するモジュールが承認を取得していれば、機器本体で承認を取る必要がなくなる、メリットがあります。ホストは別のプロセッサで実装されます。ホストはモジュールのコントローラと、シリアル端子やSPI、USBなどの物理インタフェースを通じて、HCIで通信します。

規格にHCIがあるので、2チップ構成でも、どのメーカのコントローラでも共通に使えるようになります。例えば、パソコンでは、ホストはBluetoothスタックと呼ばれるソフトウェアで提供されます。どのメーカのBluetooth USBドングルでも、USBを通してHCIで通信することで、同じように使えます。

どのようなチップ構成でも、ユーザのアプリケーションは、ホストと同じプロセッサで実行されます。ですから、HCIの場合と違い、ホストとユーザアプリケーションの間のインタフェースは、規格に定義がありません。メーカーやOSなどの提供側が決めるもので、開発環境に依存します。

どちらの構成をとるかは、状況によります。機能が単純な周辺機器ならば、製造コストを最小にするため1チップ構成をとるでしょう。機能が複雑だったり、既存設計に Bluetooth low energy の通信機能を追加するなどで、1チップ構成ではユーザアプリケーションを処理できないならば、2チップ構成を選びます。モバイル機器やパソコンなど、モジュールを採用すれば、おのずと2チップ構成になります。

=== Logic Link Control and Adaptation Protocol

ホストのLogical Link Control and Adaptation Protocol(L2CAP)は、通信の多重化を行うレイヤです。2つのデバイス間のデータ通信を提供するコントローラを通じて、プロトコルごとに、指定したチャネルごとの独立した通信を提供します。頭文字で略すとLLCAPですが、Lが2つ並ぶのを数字で表して、L2CAP、と表記します。

iOSデバイスのBLEアクセサリの設計指針は、 スレーブからマスターへの通信パラメータの伝送は、L2CAPの接続パラメータアップデートで伝えるべきとしています。この設定を要求するのは周辺機器のみです。 設定できるパラメータは、通信を行う周期を与えるコネクション・インターバル、接続が失われたと判定するスーパービジョン・タイムアウトなどです。

周辺機器は、通信頻度や電池消費量のバランスがとれるように、適切な場面で適切なパラメータを設定します。例えば、周辺機器がiPhoneに初めて接続したときに、まとまった量のデータを一気に送信したいならば、インターバルを短くして実効通信速度をあげて、短い時間でデータを送ります。接続したあと、電池消費量をおさえたいならば、インターバルを長くします。

=== Attribute Protocol(ATT)とGeneric Attribute Profile(GATT)

iOSアプリケーション開発者が実装で直接触れるのは、ホストの上位層にある、Attribute Protocol(ATT)とGeneric Attribute Profile(GATT)です。このレイヤは、 Bluetooth low energy のサービスおよびキャラクタリスティクスを定義しています。

 Bluetooth low energy の周辺機器は、サーバとして、センサの値、動作設定値、内部状態などを公開しています。 Bluetooth low energy は、ある機能をサービスという単位にまとめます。1つのサービスは複数のキャラクタリスティクスを持ちます。例えばエアコンであれば、室内温度というサービスを作り、そのなかに気温センサの値というキャラクタリスティクスをもたせる設計をしたりします。

=== ジェネリック・アクセス・プロファイル

ジェネリック・アクセス・プロファイル(Generic Access Profile, GAP)は、すべてのBluetoothデバイスが実装すべき、ベースプロファイルの実装です。GAPは、物理層からGATまでのレイヤをまたいだ、デバイスの振る舞いを提供します。

GAPは4つのデバイスの役割を定義します:

- ブロードキャスター
- オブザーバ
- ペリフェラル
- セントラル

Bluetoothデバイスは、コントローラが対応していれば、この4つのどの役割になれます。しかし、同時に2つ以上の役割になることはできません。

ブロードキャスターは、送信するだけのアプリケーションです。 Bluetooth low energy のアドバタイジングで、データをブロードキャストします。ブロードキャスターは送信機能のみが必要で、受信機能は必要ありません。またコネクションをサポートしません。オブザーバは、受信するだけのアプリケーションです。オブザーバには受信機能のみが必要で、送信機能とコネクションは不要です。

ペリフェラルは、単1の接続をサポートします。コントローラのスレーブのみをサポートします。セントラルは、すべてのペリフェラルとの接続を開始して、複数の接続を管理するものです。

役割により必要な機能が異なるので、必要な機能だけを実装することで、製造コストの削減などができます。例えばブロードキャスターであれば受信回路やその制御機能をすべて削除することもできます。しかし実施には、設計開発から販売管理までを含めたコストから、セントラルに対応したデバイスのみが販売されています。

== セキュリティとプライバシー

通信技術には、想定される人間の悪意や犯罪行為に対抗できる、強固なセキュリティの確保とプライバシー保護の技術が必要です。

機器を電線で接続しなくても利用できたり、あるいは近づけるだけで通信ができる無線通信は、無線LANや電車の自動改札などで日常的に利用しています。通信では、クレジットカード情報のような課金などの重要な情報もやりとりされているので、不正な利益を得ようとする人も出てくるかもしれません。

無線通信は電波で通信しますが、電波は四方八方に広がっていきます。ですから、誰かがこっそり通信を傍受して、自分しか知らないはずの情報をこっそり盗みだすかもしれません。あるいは、外部から電波を送って機器を不正に操作したりするかもしれません。

=== 無線通信の利用場面と暗号化技術

通信のセキュリティ技術に、認証 (Authentication)と 認可 (Authorization)という2つの単語があります。認証は、通信相手が正しい相手であることを確認する方法のことを言います。認可とは、認証により確認されたものに対してアクセス権限の制御を行い、相手に固有のサービスを提供することを言います。

認証や認可の仕組みは、通信する機器同士がお互いに知っていなければならないものですから、通信規格が提供しなければなりません。しかし、認証や認可をどう使うかは、利用場面にあわせて設計するものです。

例えば、スポーツジムにあるトレーニング装置からスマートフォンに心拍データを取得する一時的な利用であれば、すぐに使えることが便利ですから、だれでも利用できるように設計します。その場合は認証の仕組みを使うことはないでしょう。ですが、個人が所有する心拍センサーであれば、他人が勝手に接続してデータを読み取られるのは嫌なことですから、認証の仕組みを必ず入れるでしょう。

無線通信は、人間であれば目を閉じて声だけで周囲と会話するようなものです。人間であれば声色で相手が誰かを判定できますが、電波には人間の声色のような機器に固有の情報はありません。無線通信の認証と認可は、暗号化技術で実現されています。

=== 無線通信への攻撃方法

Bluetooth無線技術は、次の悪用や攻撃方法を想定しています [^1310]。

- 受動的な盗聴 (passive eavesdropping)
- トラッキング (tracking)
- 中間者攻撃   (man-in-the-middle attack, MITM)

[^1310]: [​Security, Bluetooth Smart (Low Energy), @<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/LE-Security.aspx](https://developer.bluetooth.org/TechnologyOverview/Pages/LE-Security.aspx)}

電波は周囲に広がるうえに、Bluetooth無線技術は規格化された技術なので、電波を受信して通信内容を解析することはとても容易にできます。

まず、受動的な盗聴は、受信するだけの盗聴です。Bluetooth Smart機器の通信は最大でも50メートル程度ですが、指向性の高いアンテナと感度の良い受信装置を使えば、その通信距離よりもはるかに遠距離から盗聴することもできます。受動的な盗聴に気づくことは困難です。

受動的な盗聴で、トラッキングができます。Bluetooth無線技術は利用者が常に身につけたり持ち歩く機器に使われます。機器がやりとりするパケットには、返信するときに必ず必要になる発信元の識別情報が入っています。その識別情報をたどっていくと、ユーザがどこにいたかというプライバシー情報が収集できるかもしれません。

また、能動的に電波を送信することもあります。Bluetooth Smart機器が通信しているタイミングに合わせて、正当なパケットを打ち消すほど強力な電波を送信して、パケットのやりとりの間に割り込み、不正に情報を引き出したり機器を操作するかもしれません。

このような高度な技術を使わなくても、攻撃できる場合もあるでしょう。ユーザが近づいただけで反応するBluetooth Smart機器であれば、受信した電波を再送信する中継装置のようなものを使えば、暗号化に関係なく機器を遠方から反応させられるでしょう。これはユーザが近づいただけで機器が反応するという設計がもたらす脆弱性で、無線規格では対応ができないものです。

=== ペアリングとボンディング

Bluetooth low energyは、AES(Advanced Encryption Standard)というアメリカ国立標準技術研究所が公開している共通鍵暗号化方式を使います。AESの鍵長は128ビット���192���ッ���、そして256ビットの3つが選べますが、Bluetooth low energyは128ビットの鍵長を使います。

共有鍵暗号化方式とは、同じ鍵で暗号化と復号化とができる暗号化方式です。暗号化に使う鍵それ自体を通信相手に渡して共有するために、共有鍵暗号化方式と呼ばれます。

Bluetooth low energyは、2つの機器間でこの鍵を交換する手順をペアリング、交換した鍵を保存して再接続してもセキュアな接続が続けられるようにすることをボンディングと呼びます。

通常はペアリングをするならばボンディングもするように設計しますが、ペアリングはするがボンディングはしない設計も可能です。例えば、スポーツジムにある共有機器で、使用中はセキュアな接続をさせたいが同じ機器を継続して利用することはないならば、ペアリングはするがボンディングはしない設計が使いやすいでしょう。

スマートフォンとBluetooth Smart機器とをペアリングするときに、PINコードと呼ぶ6桁の数値を入力することがあります。このPINコードは、鍵を交換する通信を暗号化するテンポラリ鍵に使われます。Bluetooth Smart機器は、ペアリングでPINコードを入力させないようにも設計できます。このときはPINコードは0であると扱われます。

6桁のPINコードは、強固なセキュリティとはいえません。もしも鍵を交換する通信が受動的に盗聴をされていると、そのデータにPINコード0から999,999までを総当りで解析するだけで、鍵そのものを取り出せます。6桁の数字を2進数で表現すると20ビットです。鍵長が20ビットの暗号化通信の解析には、1分もかからないでしょう。

Bluetooth low energyは128ビットの鍵長を使いますが、この鍵長であれば総当りでは解析に何千億年もの時間がかかり、解読すること自体が現実的ではなくなります。もしもPINコードを128ビット長にしようとすると、ランダムな英数小文字を24文字入力しなくてはなりません。これほどの文字数ではタイプミスばかりして、不便でしかありません。

そこでBluetooth low energyは、人間によるPINコード入力以外に、NFC (Near Field Communication)やQRコードなどの、無線通信以外の方法で128ビット長のテンポラリ鍵を交換する方法も提供しています。セキュリティを求めるならば、これらも検討します。

共有鍵暗号化方式では、どうしても鍵それ自体を相手に渡さねばなりません。そこでBluetoothコア仕様4.2では、Bluetooth low energyにも公開鍵暗号化方式がとりいれられました。公開鍵暗号化方式は、暗号化に使う公開鍵と復号化に使う復号鍵が別々の鍵になる方式で、通信相手には公開鍵だけを渡します。秘密鍵は通信でやりとりされないので、もしもペアリングを受動的に盗聴されていても、秘密鍵は盗み出せません。

Bluetooth low energyの認証および認可は、1つ1つのパケットの単位でおこなわれます。AESは、128ビットのデータを1ブロックとしてブロック単位で暗号化する方式です。ですから、ブロックの値が同じであれば、暗号化された値も同じになります。Bluetooth low energyは、パケットが同じデータを運んでいても、暗号化データは全く違う値になるように、また同じ暗号化データが現れることがないように、ブロックに通信開始ごとにランダムに割り当てる値とパケットごとに割り当てるシーケンス値も混ぜ込みます。

受動的な盗聴への対策として、パケットの暗号化、またGATTでキャラクタリスティクスの暗号化ができます。通信全体を暗号化すると暗号化処理の重さや消費電力の増加が問題となる場合や、特定のキャラクタリスティクスだけを保護したいならば、GATTのキャラクタリスティクス単位でそのデータを暗号化する手段がよいでしょう。

トラッキングへの対策として、パケットのやりとりのために必ずパケットに入る発信元アドレス値を、ランダム値に変更することができます。ペアリングをした機器は、認証した機器かどうかを、ランダム値から鍵を使い判定できます。受動的な盗聴をして発信元アドレス値を集めても、鍵を持たないならば機器とアドレス値の対応づけができないので、トラッキングへの対抗になります。

受動的な盗聴と能動的なパケットの差し込みを行う中間者攻撃への対策は、通信の暗号化以外にも、GATTのキャラクタリスティクスごとの認可でも対策できます。例えば、キャラクタリスティクスに認可があるものだけが書き込みが可能という属性をつけておけば、鍵を使い生成する正しい署名データがあるものだけが、書き込みできます。

==== Bluetooth Low Energyの規格団体とその運用

Bluetooth規格の開発を監督しているのは、1998年に設立された非営利の非株式会社 Bluetooth Special Interest Group (SIG), Inc. (Bluetooth SIG) @<href>{https://www.bluetooth.org} footnote:[Bluetooth SIG について @<href>{https://www.bluetooth.org/ja-jp/members/about-sig-overview} です。

この Bluetooth SIG は Bluetooth対応製品の開発、製造、販売はしません。規格に参加するメンバーが多種多様な機器を接続するための望ましい無線技術を開発することより、Bluetoothブランドを強化することを使命としています。

Bluetooth SIGの主な任務は、次の4つです:

* Bluetooth 仕様の公開;
* 認証プログラムの管理運営;
* Bluetooth 商標の保護;
* Bluetooth 無線技術の普及促進。

認証プログラムには宣言と認証の2つがあります。"宣言"(Declaration)は、自社ブランドとしてBluetooth製品を一般販売する場合に必要です。無線モジュールを一切変更せずに組み込んだ自社製品や、設計製造会社の製品をそのまま自社製品として一般販売する場合は、宣言のみが求められます。

宣言する製品は、ヘッドホンなど電気量販店の店頭に並ぶような製品だけではなく、無線モジュールやスタックなどの、いわば製品を作るための部品も、宣言すべき製品に含まれます。宣言することで、Bluetooth無線技術の特許使用や商標利用が可能となります。もちろん、Bluetooth製品の卸や小売をするだけならば、宣言も認証も不要です。また、試作や評価段階では宣言は不要です。

なにかしらの設計をしたBluetooth製品には、宣言に加えて、"認証"(qualification)が必要です。これは、その設計されたものを試験してBluetoothの仕様を満たすと確認するものです。この認証プログラムは、設計で変更した部分を確認します。ですから、例えば無線モジュールにカスタム・プロファイルのアプリケーションを実装する場合は、追加したカスタム・プロファイルの部分だけを認証します。それ以外の、電波を出す部分やスタックは、無線モジュールの認証を引き継げます。

電波のやり取り部分の認証は、校正された高周波測定装置が必要ですから、認定機関に機器を持ち込み測定してもらいます。これには専門家に依頼するため相応の費用と時間がかかります。無線モジュールにカスタム・プロファイルを実装しただけならば、認証試験レポートの自己申告で済みます。このレポートは、オンラインでテスト手順を生成して、99ドルで販売されている試験装置に通すと、自分たちで生成できます。

#@#費用、年会費、宣言の費用。たくさんの企業、より多くの製品。登録。市場に出続けること。新技術開発の駆動力。
#@#宣言は、宣言ID(IDentifier, 識別子)を購入し、新しい申告を作成して、準拠宣言(DoC,Declaration of Compliance)に署名することで、完了します。宣言IDの価格は、2017年の時点で、年会費が無償のアダプターでは4,000米ドル、年会費が求められるアソシエイトメンバーでは8,000米ドルです。あるいは、最初のBluetooth製品を商品化するスタートアップ企業のためのイノベーション推奨プログラムが適用されれば、2,500米ドルになります。

#@#重要: 申告 (宣言) に複数の製品を含めることもできます。ただし、準拠宣言で参照される QDID を各製品が同様に実装している場合に限ります。これによって複数の DID を購入する必要がなくなります。

#@# 製品の宣言 @<href>{https://www.bluetooth.com/ja-jp/develop-with-bluetooth/qualification-listing/declare-your-product}



==== Bluetooth Low Energyの規格とその変遷

Bluetooth無線技術は、時代の要求にあわせて、新しいバージョンの規格を発表してきました。電波をやりとりする物理層に新しい技術を導入するたびに、仕様のメイジャー・バージョン番号が増えています。バージョン1.0仕様は1999年に公開されました。そして、2004年にBluetoothコア仕様バージョン 2.0 Enhanced Data Rate (EDR)が、2009年には Bluetoothコア仕様バージョン 3.0 High Speed (HS)が公開されました footnote:[社歴 @<href>{https://www.bluetooth.com/ja-jp/media/our-history}]。

2010年に公開された Bluetooth コ​​ア仕様バージョン4.0で、Bluetooth無線技術にBluetooth low energy技術が統合されました。この技術は、もともとは2006年にWibreeという規格として公開されたものです。その技術を、Bluetooth無線技術に、将来の発展も視野に入れて最小限の変更をして統合したものが、Bluetooth low energy技術です。

Bluetooth low energy技術の、デジタル・データを電波でやり取りする技術は、Bluetooth3.0までの技術とは異なります。統合したといっても、Bluetooth 4.0は、Bluetooth 3.0までの技術と、Bluetooth low energy技術の、2つの技術を内包したものです。そのため、Bluetooth 4.0では、Bluetooth 3.0までの無線技術とBluetooth low energy技術との両方に対応したデュアル・モードと、Bluetooth low energy技術のみに対応したシングル・モードとの、2種類があります。

Bluetooth無線技術は、バージョン3.0まで後方互換性を保ってきました。ですから、例えばバージョン2.0で製造された機器は、バージョン3.0の機器と接続し利用できます。Bluetoothの商標(ロゴ)があれば、そのバージョンを気にすることなく、安心して利用することができました。

ですが、Bluetooth 4.0では、Bluetooth 3.0まで保ち続けてきた後方互換性が、初めて一部失われました。2つの技術に対応するデュアル・モードであれば、すべての機器と接続できます。ですが、Bluetooth 3.0 までのBluetooth無線技術を採用している機器では、Bluetooth 4.0のシングル・モードの機器には接続できません。

このため、Bluetooth SIGは、コア仕様を公開した翌年の2011年10月に、Bluetooth 3.0までのロゴに加えて、Bluetooth 4.0専用のロゴを新たに発表しました。それが、Bluetooth 4.0のデュアル・モードにBluetooth Smart Ready、シングル・モードにBluetooth Smartという、2つの新しい商標(ロゴ)です。ですが、Bluetooth 4.0が広く普及した現在では、3つもあるロゴは利用者を混乱させるばかりです。そこで2016年からは、新しい青色で更新した1つの商標へ、切り替えが進められています。

コア仕様はバージョン4.0の公開から、短期間に仕様が更新されてきました。2010年のバージョン4.0の3年後に2013年12月に4.1が、その翌年の2014年には4.2が、さらに2年後に2016年に5.0が公開されました。これらの更新は、バージョン4.0との後方互換性を保ちながら、Bluetooth low energy技術に、より強固なセキュリティ、通信速度の向上、そして通信距離を延ばす技術を導入しています。

コア仕様の変遷をみると、新製品をこれから開発するならば、どのバージョンのコア仕様を選択すべきか迷うかもしれません。バージョンごとに、コア仕様の技術要素は増えていきますが、自分たちが使う技術はその全体ではなく部分です。また、Bluetooth 4.0以降は後方互換性は保たれていきます。ですから、自分たちが必要とする技術要素を決めれば、その技術が含まれているコア仕様以降であれば、どのバージョンを選んでもよいのです。

スマートホンの周辺機器ならば、Bluetooth 4.0でよいです。いくつかのBluetooth low energy技術の機器を集約してスマートホンに伝えるハブ・デバイス、例えば自転車のセンサー情報を集約してスマートホンに伝える機器や、家電製品の制御を取りまとめるコントロール・パネルのような機器などは、同時にセントラルとペリフェラルになれるBluetooth 4.1以降が必要です。また、HomeKitあるいはインターネット技術を使うものには、連続したデータをより効率よく扱えるBluetooth 4.2が適しているでしょう。

さらにBluetooth5.0および5.1へと発展しています。規格のメジャー番号が増えるのは、物理層に新たな技術が導入された時です。Bluetooth5.0では、4.0での1Mbpsに加えて2Mbpsのより高速な変調方式が追加されました。さらに、通信距離を大きくするための、前方エラー訂正方式を追加したコーデッドPHYが追加されました。通信距離が大きくなると、だんだんとビットエラーが発生していきます。前方エラー訂正方式を導入することで、 発生しているビットエラーを訂正することができます。そのかわりに、同じ情報量を送るにも、より多くの通信時間がかかります。Bluetooth5.0は、通信の高速化と長距離化が、大きなアピールポイントですが、この2つは独立した技術です。ですから、高速化かつ長距離化はできません。Bluetooth5.0の技術では、高速化か、長距離化か、どちらかを選ぶことができます。またBluetooth4.xの技術とは、互換性がありませんから、この利点は活かせません。Bluetooth5.0のものが通信するときは、4.x互換で通信することになります。クラシックBluetoothでのように、通信できないなんてことはありません。


また、コア仕様のバージョン選択は、半導体会社によって、半導体の選択に影響しない場合と影響する場合があります。Nordic Semiconductor社の製品では、nRF51822は、コア仕様の更新に、無線通信を制御するスタックと呼ぶソフトウェアの更新で対応してきました。そのため、nRF51822はBluetooth 4のいずれでも対応できます。また、テキサス・インスツルメンツ社の製品では、CC2540はBluetooth 4.0のみに対応します。Bluetooth 4.1および4.2には、CC2540の後に開発された、異なる構成のCC2640が対応します。

宣言は、宣言ID(IDentifier, 識別子)を購入し、新しい申告を作成して、準拠宣言(DoC,Declaration of Compliance)に署名することで、完了します。宣言IDの価格は、2017年の時点で、年会費が無償のアダプターでは4,000米ドル、年会費が求められるアソシエイトメンバーでは8,000米ドルです。あるいは、最初のBluetooth製品を商品化するスタートアップ企業のためのイノベーション推奨プログラムが適用されれば、2,500米ドルになります。

==== Bluetooth Low Energyの特徴

#@# ものをデジタル・データで表現するGATTという仕組み、そして、ものとの関わり方や使われ方を表すプロファイル

この従来版Bluetooth無線技術の誕生と普及の影で、より低消費電力で低価格な新しい無線通信技術として開発が進められていたのが、Bluetooth low energy技術です。

Bluetooth low energy技術は、従来版Bluetooth無線技術を置き換える技術ではありません。従来版Bluetooth無線技術があまり使われてこなかった利用分野に向けて開発された、新しい技術です。

まず、Bluetooth low energy技術は、その名のとおり、超低消費電力の無線通信技術です。いままで無線技術が使われてこなかった製品に無線通信を採用すると、無線通信の分だけ消費電力が増えます。それにより電池交換の手間が増えて不便になったりしないように、無線通信は十分に超低消費電力でなければなりません。

従来版Bluetooth無線技術は、デジタル・データを連続してやり取りし続ける無線技術です。これは、音が途切れてはならないヘッドセットや、送信が中断してほしくないファイル交換などの利用分野では大切な技術です。ですが、途切れない安定した無線通信技術は、高品質なぶんだけ、複雑になり消費電力を小さくするのにも限界があります。

ですが、身の回りにある様々な機器に、デジタル・データを途切れなく連続してやり取りし続けるものは、あまりありません。例えば、テレビやエアコンのリモコンは、ボタンが押されときに、そのボタンの種類を送信するだけです。

ですから、従来版Bluetooth無線技術が連続してデータをやり取りし続けるのとは異なり、Bluetooth low energy技術は、少量のデータの低頻度でのやりとりを前提にして、超低消費電力無線技術を実現しています。

この超低消費電力無線通信は、無線通信を必要最小限の時間だけしか使わないことで実現できます。高周波信号をあつかう無線回路は、送信でも受信でも、動かすだけで大きな電力を消費します。ですから、送信側と受信側は、通信する時間をあらかじめ同期して、データをやり取りする時間だけ無線回路を動かし、通信が完了すればすぐに無線回路を停止するのです。

通信には2つの重要な性能項目、通信速度と遅れ時間があります。通信速度は、1秒で送信できるデジタル・データの量を、遅れ時間は、送信を開始したデジタル・データが実際に相手に届くまでにかかる時間をいいます。

この遅れ時間は、送受信側それぞれがお互いに無線回路を動かす周期(コネクション・インターバル)で決まります。この周期が短いほど、無線回路を動かす回数が増えるので、消費電力は増えます。

Bluetooth low energy技術は、この無線回路をオンにする周期を、7.5ミリ秒から4秒までの範囲で設定できます。例えば、楽器のように遅れ時間をできるだけ短くしたい利用分野はミリ秒単位の小さな遅れ時間を、また温度計のように遅れ時間がなくてもよい利用分野は、周期を長くして電力を節約するなど、利用分野それぞれに適した設定にできます。

また、Bluetooth low energy技術は、無線接続が切断することを受け入れる技術です。もしも、あらかじめ同期した時間に、来るべき無線信号がこなければ、その無線接続は切断したものとみなします。

従来版Bluetooth無線技術は、例えばヘッドセットでは通信が切断すれば音が途切れてしまうように、データが流れ続ける用途に使われます。ですから、接続が切れないよう高品質の無線通信に設計されています。

Bluetooth low energy技術は、少量のデータを低頻度でやりとりするものなので、通信が切断しても、再接続すればよいのです。また、Bluetooth low energy技術の機器の発見と接続処理は、場合によっては20ミリ秒程度と、とても素早くできるものに設計されています。

また、Bluetooth無線技術は、無線通信で機器を扱うための技術ですから、無線通信と同じくらいに、データ表現の仕組みが重要です。

従来版Bluetooth無線技術は、機器ごとに通信とデータ表現を組み合わせた最適な技術を提供しています。例えば、音声信号を送るという同じ機能でも、通話に使う電話通話向けでは遅れ時間の小ささが、音楽を聞く用途では高音質がと、異なる性能が求められます。

ですから、音声通話向けには、遅れ時間の小さい通信とその通信の特徴を活かせるデータ表現を、音楽鑑賞向けには、遅れ時間は大きくても高音質の大量のデータを遅れる通信と、その特徴を活かした高音質のデータ表現を、それぞれ提供します。

このように、利用分野に最適な技術の提供には、通信とデータ表現をうまく組み合わせることが不可欠です。ですが、Bluetooth low energy技術は、多種多様な機器に向けた技術です。従来版Bluetooth無線技術のように、機器ごとに時間と費用をかけて最適な技術を提供するわけにはいきません。

そこで、Bluetooth low energy技術は、GATT基盤アーキテクチャという仕組みを採用しています。このアーキテクチャは、機器の機能をデータベースとして表現する仕組みです。機器がサーバーに、スマートホンなどがクライアントになる、サーバー・クライアント モデルを採用しています。

このGATT基盤アーキテクチャで、通信とデータベースの読み書きとの組み合わせが最適化されています。このGATT基盤アーキテクチャ上で、機器の機能は、データベースのデータ形式として定義されます。ですから、機器ごとの開発はデータ形式を定義するだけで、GATT基盤アーキテクチャが提供する通信とデータ表現を組み合わせ最適化された技術が利用できます。

さらに、無線を通じて機器を利用するBluetooth low energy技術には、機器の所有や利用の権利を表現する仕組みがあります。無線通信では、機器の周囲にいる誰でもが電波を送信したり受信したりできます。ですから、通信相手が偽装ではなく信頼できる相手だと認証したり、その機器の所有や利用の権利があと認可するために、暗号技術と事前に交換された暗号鍵が持ちいられます。

この暗号鍵の交換と保存の機能は、ペアリングとボンディングと呼ばれます。ペアリングは無線接続時に暗号鍵を交換する機能です。ボンディングはペアリングで交換した暗号鍵を保存して、再接続時に保存した鍵を利用できる機能です。

このペアリングとボンディングを使って、所有や利用の権利を表現できます。例えば、血圧計があったとします。これがスポーツジムに設置されたものならば、それは誰が使ってもよい機器です。この場合は、ペアリングもボンディングもせず、任意のスマートホンからすぐに手軽に接続できるようにするでしょう。しかし、これが個人所有ならば、ペアリングとボンディングをして、所有者のスマートホンとだけ接続できて、かつプライバシーを守るために通信は暗号化するでしょう。

==== カスタム・プロファイルとアプセサリ

Bluetooth無線技術は、無線通信を通じて機器とアプリケーションがお互いに関係して機能を提供するための規格です。Bluetooth無線技術では、通信でデータをやりとりする手順の仕様をプロトコル、機器の振る舞いの仕様をプロファイルと呼びます footnote:[プロファイルの概要 @<href>{https://www.bluetooth.com/ja-jp/specifications/profiles-overview}。

スマートホンやモバイル機器があたりまえになった時代に登場したBluetooth low energy技術は、パーソナル・コンピュータの時代にはなかった利用場面を生み出しています。

Bluetooth low energy技術は、GATT 基盤アーキテクチャを採用しています。これには、ジェネリック・アトリビュート・プロファイル(Generic Attribute profile, GATT Profile)という、機器の機能をデータベースとして表現する仕組みがあります。すべての機器のプロファイル、つまりふるまいは、このGATTプロファイルを使い表現されるデータベースと、そのデータベースへの読み書きの手順で定義されます。

プロファイルには、Bluetooth SIGにより採択された採択済みプロファイルと、任意のカスタム・プロファイルの2つがあります。

採択済みプロファイルは、例えばキーボードのような周辺機器のような、すでに市場があり機能も決まっている機器への、Bluetooth low energy技術の普及に不可欠です。機器設計製造会社は、採択済みプロファイルを実装して機器を製造販売します。オペレーティング・システムが、この採択済みプロファイルにしたがいデバイス・ドライバを実装してプロファイルに対応すれば、どの会社の製品であっても利用できます。

カスタム・プロファイルは、ユニークで多種多様のBluetooth Smart製品を生み出す鍵です。この分野では、アプリケーション(Application)とアクセサリ(Accessory)とが組み合わり初めて価値が生まれるということで、この2つの単語を組み合わせたアプセサリ(Appcessory)という造語が作られています。

スマートホンとそのアプリケーション開発環境の登場が、アプセサリを生み出しました。スマートホンでは、パーソナル・コンピュータのように、利用者がデバイス・ドライバを追加して新しい周辺機器に対応させることはできません。ですが、現在のスマートホンのソフトウェア開発キット(Software Development Kit, SDK)は、アプリケーション開発者にGATTプロファイルを公開しています。それを使うと、アプリケーションそれ自体が任意のプロファイルに直接対応できるのです。

アプセサリは大きく、機器の製造販売が原動力となるものと、サービス提供が原動力になるもの、2つに分類できます。

機器の製造販売が原動力となるものは、例えば筆圧や傾きを検出する電子ペンがあります。機器の設計製造会社は、カスタム・プロファイルを定義してペンを製造販売します。このペンに対応する描画アプリケーションが多ければ多いほど、より多くのペンが売れます。ですから、この会社は、アプリケーション開発会社と協業したり、アプリケーションからペンを使うためのライブラリを公開するなどして、対応アプリケーションを増やそうとします。

サービス提供が原動力となるものは、例えば腕時計型の活動量計があります。フィットネスを提供している会社は、自社のウェブ・アプリケーションやスマートホンのアプリケーションを魅力あるものにするために、それらと連携する腕時計型の活動量計を設計販売します。サービスの利用者が多いほど機器の売り上げが増えます。機器はサービスの売上と魅力の一部ですから、プロファイルを第3者に公開することはありません。

==== Bluetooth low energy技術の今後

Bluetooth low energy技術は、スマートホンのハードウェア対応と、GATTプロファイルのアプリケーション開発への開放で、スマートホンをハブとしたウエアラブル機器や電化製品に広く普及しました。

Bluetooth無線技術は、利用分野をより便利にさらに拡大するために、時代に合わせて技術更新を続けています。2010年にBluetooth4.0を公開してから、2013年にBluetooth4.1を、2014年にBluetooth4.2を公開しました。そして2016年にはBluetooth5の公開が予定されています。

Bluetooth4.1および4.2では、インターネット・オブ・シングス(Internet of Things, IoT)への対応が追加されました。

IoTとは、あらゆる物や物事がネットワークにつながることを言います。GATTプロファイルに最適化した無線技術そのままでは、世界中の機器とつながるためのインターネット・プロトコルを扱うには、ヘッダ情報などのGATTプロファイルにはないフィールドのために、通信効率が低くなります。そこでパケット長を拡大しています。またセキュリティ機能も高められています。

さらに、Bluetooth5では、IoT対応のさらなる強化や、音声通話や電化製品への分野拡大に向けて、1秒あたりのデータ通信速度を2倍に、また通信距離を2倍にする無線技術が導入されます。Bluetooth無線技術は、Bluetooth low energy技術を統合で、そのメイジャー番号を3から4に更新したように、無線通信の基本部分を更新したときに、規格のメイジャー番号をあげます。

通信速度の向上と通信距離の増大は、同時には得られません。データ通信速度の理論的な上限は、シャノンの定理から、送信電力とノイズ電力の比で与えられます。近距離でノイズの影響が少ない利用場面では、高速なデータ通信速度を、遠距離でノイズの影響が大きくなる利用場面には、エラー訂正符号を組み込むことで、遠距離の通信を可能とします。

通信速度が2倍になれば、IoT対応で通信データ量が増加しても、無線回路の使用時間を増やさなくてすみます。IoTの分野でも、Bluetooth low energy技術の、超低消費電力の体験が提供できます。

通信距離は、ウエアラブルよりも大きな通信距離が必要な家電製品の分野で重要です。直接通信できる距離を伸ばすだけではなく、メッシュ・ネットワークと呼ばれる、Bluetooth Smart機器同士がパケットを中継しあう自律的なネットワーク技術も登場します。

このような急速な新しい技術の取り込みは、通常はその採用機器の一般販売を阻害します。その規格を採用した機器を開発しても、一般販売を開始する頃には新しい規格が登場して使えなくなると消費者に思われると、機器を買ってもらえないからです。

ですが、Bluetooth無線技術は、これまで後方互換性を保持して市場にあるあらゆる機器との相互接続を確保してきた実績に裏付けられた、高いブランド力があります。Bluetooth4.0でのBluetooth Smart機器の登場という例外はありましたが、Bluetooth5そしてその後に続く規格でも、後方互換性が確保された、新しい技術の恩恵がうけられる運営が続けられるでしょう。

=== 無線通信の詳細

通信は一人では成り立ちません。必ず同じ手順でやりとりする相手がいなくては成り立ちません。そのお互いとお互いのやりとりの手順を提供するものが通信規格です。通信規格の多くは、規格適合の認証制度が運用されています。その認証制度があるから、異なる製造会社が出荷した製品間の無線通信が実現されます。

無線通信技術は、無線通信やパケット通信などの高度な技術をいくつも組み合わせて初めて実現できます。しかし、規格適合している無線通信モジュールや、ソフトウェア開発を容易にするiOSのフレームワークを使うならば、それらの技術の詳細を知らなくても開発ができます。

たしかに、目的がはっきりした開発であれば、提供される無線モジュールなどの利用手順に従うだけでよく、その内部にある技術詳細を知る必要はありません。

しかし、目的もはっきりしない実現可能性を自分で判断しなければならない場面であれば、その内部にある技術がどのような性質であり、どう活用できるのかを知る必要があります。

Bluetooth low energyの無線通信技術は、その最大の特徴である超低消費電力がどのように実現されているかは、知るだけでも単純にたのしいものですし、またその知識が多種多様の利用場面を考えだす基礎力にもなります。

ここでは、Bleutooth low energyという通信技術が、どのような性質をもっているのか、またどのような工夫や考え方で作られているのかを見ていきます。

== 無線通信を会話に例えると

Bluetooth Smart機器が送受信している電波は人間の目や耳では捉えられません。しかし、それらの機器間の無線通信の様子は、人間が目を閉じて音声だけで周囲と会話している状態だと思えば、容易に想像ができます。人間は、外部からの情報のほとんどを視覚から得ています。ですから、目を閉じて聴覚だけの状況を想像することが重要です。

声と聴覚のそれぞれを使う使わないの組み合わせから、次の4つの使い方がでてきます:

1. 話さないし聞かない
2. 話すだけ
3. 聞くだけ
4. 話すし、聞く

話すだけでも、周囲に自分の存在を知らせることができます。聞くだけでも、周囲に誰がいるかを知ることができます。

Bluetooth low energyの通信は、周囲に自分の存在を知らせること、そして周囲に誰がいるかを知ることから始まります。お互いにお互いの存在を検出して初めて、3つめのお互いのやりとりを開始できます。

お互いに会話をするには、 相手に自分の声が聞こえること、そして相手の声が自分に聞こえることが必要です。

声の大きさは、電波の送信電力に相当します。大きな声をだすほど、より遠くまで伝わります。そして、耳の感度が高いほど、また周囲が静かなほど、遠いところで発せられたより小さな声が聞き取れます。耳の感度は電波のアンテナや半導体の性能に、周囲の静かさは電子レンジやWi-Fiなどの周囲にある電波を発信している機器に対応します。

通信が成り立つには、お互いの声がお互いに聞こえる必要があります。声は大きいけれども耳の感度が低いと、相手には声が届くけれども、相手の声が聞こえないかもしれません。また声が小さくても耳の感度が高ければ、その逆になります。いずれにしても、通信は成り立ちません。

お互いに会話をするには、さらに次の条件が必要です:

- 話すタイミングと聞くタイミングが合うこと
- 話している内容がお互いに理解できること

ここでは、自分が話している間は自分の声が邪魔になり、相手の声が聞こえないとしましょう。そうすると、お互いに話すタイミングと聞くタイミングをあわせなくてはいけません。また、日本語しかわからない人が英語を聞いても理解できないように、相手が話した内容を自分が理解できなければなりません。

この目を閉じた状態での会話の様子は、Bluetooth Smart機器どうしが通信する様子そのままです。これらの基本的なやりとりをまとめる仕様が、Bleutooth無線技術ではBluetoothコア仕様と呼ばれます。

声も電波も、周囲に広がるものなので、誰かがじっと耳をすましているかもしれません。またやりとりのタイミングに合わせて、誰か知らない人が電波を送信して不正に情報を読み出したり、書き込んだりしようとするかもしれません。ですから、この普段の会話の場面からは気づきにくいのですが、無線技術には、強固なセキュリティとプライバシーの保護が求められます。

それでは、この会話のたとえから、具体的な数字を交えて、Bluetooth low energyの技術の詳細を見てみます。

== Bluetooth low energyが使う2.4GHzの電波

Bluetooth無線技術は、周波数が2.4GHzの電磁波を使います。Hz(ヘルツ)は周波数の単位で、1Hzは1秒あたり1回の振動です。G(ギガ)は、 $ 1 * 10^9 $ を表す接頭辞です。ですから1ギガは10億を意味します。2.4GHzは、1秒間に24億回振動�������るという意味です。

電波は公共の財産です。国が、利用目的ごとに周波数を割り当てて、事業者に免許を発行して管理運営しています。この2.4GHz帯という周波数帯は、水が強く吸収する周波数なので、電子レンジのように電波を無線通信以外の産業・科学・医療に高周波エネルギー源として利用するための周波数帯に割り当てられていました。

このように、もともと2.4GHz帯は通信に使われる周波数帯ではありませんでした。しかし、半導体技術が発達して2.4GHz帯の高周波が扱えるようになると、世界各国で共通して利用できる周波数帯として、通信に利用が割り当てられました。そして現在は、無線LANやBluetooth無線技術などの、いくつもの高度なデータ通信が利用する、世界各国で広く一般で通信に使われる周波数帯になりました。

電磁波が真空中を伝わる速さ、つまり光速は $ 3 * 10^8  メートル/秒 $ ですから、2.4GHzの電磁波の波長は12.5 センチメートルです。電波を送受信するアンテナの大きさは、ほぼ波長に比例します。波長がこれくらい小さいと、アンテナが小型機器に十分収まる大きさにでき携帯機器に都合がよい周波数帯です。

また高周波信号を処理するには高速の半導体素子が必要です。身の回りにあるパソコンや携帯機器のプロセッサーの動作クロックが2GHzに達しているように、現在の半導体技術は、2.4GHzの高周波信号を扱う半導体素子を安価に大量に製造できます。

電波は波の性質を持っています。お風呂で手でお湯を押すと波が伝わっていきますが、電波もこの波と同じように空間を伝わっていきます。波は、何かにぶつかると反射したり吸収されたりします。またお風呂で2つの波をぶつけると、水面にいろいろな強弱の高さが現れるように、干渉して強め合う領域と弱め合う領域が生じます。

Bluetooth無線規格は最低受信感度と、電波の送信電力の最大最小値を規格で規定しています。送信側と受信側がお互いに見える状態で、大地を含めて電波を反射したり吸収するものが周りに何もない状態で、送信電力を最大にした時の通信距離は50メートルくらいです。

Bluetooth low energyを、相対位置や近接の検出に利用する場面では、この受信信号の強弱が目に見えてきます。

受信側は、受信信号の強さだけからビーコンまでの距離を推定します。ですがビーコンの周囲には、壁や大地などの電波を反射したり吸収するものがあり、反射した電波が強め合ったり弱めあったりしている場所があったりして、ビーコンまでの距離と受信信号の強弱の関係は、単純なものではなくなります。

また電子レンジに使われるほど、水は2.4GHz帯の電波をよく吸収します。人体のほとんどは水ですから、ビーコンと受信側の間に人が出入りすると、受信信号強度は桁違いに変化することもあります。
受信信号強度に影響するものが建物などの周囲環境だけならば、ビーコン設置時に信号強度分布を計測しておいて補正することもできるかもしれません。しかし、人のような刻一刻と変化するものも影響をあたえます。

この電波の性質があるため、ビーコンとの距離の推定値は、メートル単位の値ではなく、とても近い、近い、遠いといった3段階の距離区分で与える使われ方をします。

== 超低消費電力無線通信の技術

超低消費電力無線通信技術は、2.4GHzという高周波信号を扱う送受信回路をオンにする時間を極限まで小さくするための工夫の集まりです。

Bluetooth low energyのパケット通信を [#fig_low_energy_packet] に示します。図の横線は時間軸を示します。時間は左から右に流れていきます。グレーの四角は、送信回路が動いている期間を示します。網目の四角は、受信回路が動いている期間を示します。

高周波回路の消費電力は、直感的には外部に電波を創出する送信回路が大きいと思えるかもしれません。しかし実際の半導体回路では、むしろ受信回路のほうが送信時よりもすこし大きくなります。ですから、[#fig_low_energy_packet] の消費電力は、四角の横幅で示されるパケットの送受信時間で与えられます。

![ #fig_low_energy_packet Bluetooth low energyのパケットのやりとり](fig/ch01_fig040_packet.png)

Bluetooth low energyは、送信している電波の周波数をほんの少し高くしたり低くしたりして0と1のビット・データを送信します。そのビット・データのひとかたまりをパケットと呼びます。

無線通信では、他の無線機の信号に邪魔されたり受信信号強度が弱くて、ビットの0と1が間違えて受信されることはよくあります。ですから、パケットには、送信したいデータに加えて、そのデータが正しいかを確認できる検査用のデータが入っています。受信したパケットを検査して、受信データに誤りがあると分かったならば、そのパケットを再度送信してもらうことを繰り返すことで、誤りのないデータのやりとりができるのです。

機器の発見でのパケットのやりとりが、 [#fig_low_energy_packet] (a) です。機器情報を表すアドバタイジング・パケットと呼ばれるパケットを、アドバタイジング・インターバルという期間ごとに送信する役割を、アドバタイザと呼びます。アドバタイザを発見する役割をスキャナと呼びます。

Bluetooth low energyは、一方がより消費電力が小さくなるように非対称に設計されています。[#fig_low_energy_packet] (a) の四角の大きさをみると、いつ来るかわからないアドバタイジング・パケットを検出するスキャナのほうが、アドバタイザよりも消費電力が大きいとわかります。

[#fig_low_energy_packet] (a) は模式図なので、四角の大きさが実際の通信の送受信時間を表していないことに注意してください。Bluetooth low energyの1つのパケットは最大376マイクロ秒です。1マイクロ秒は100万分の1秒です。ですから、アドバタイジング・パケットの幅は最大366マイクロ秒です。その一方で、スキャンはアドバタイジング・インターバル程度の期間なので、数秒程度になることもあります。

通常は、消費電力の大きなスキャナの役割をiOSデバイスに、アドバタイザの役割を周辺機器に割り当てます。iOSデバイスは、充電式の大容量電池があるので、消費電力の大きな役割はiOSデバイスに担わせます。また、この役割の割り当てだと、ユーザはスキャナであるiOSデバイスから周辺機器を探すので、自然な利用場面になります。

アドバタイジング・インターバルは、スキャナが機器を発見するのにかかる時間になります。この時間が短いほど、発見が早くなりますが、アドバタイザの消費電力が増えます。消費電力と使いやすさの兼ね合いをどうするかは、周辺機器の設計によります。

Apple社はiOSデバイスと接続するBluetooth Smart機器の設計ガイドライン [^1110] を公開しています。ここでは、アドバタイジング・インターバルを、最初の30秒間は20ミリ秒に、30秒後からは150ミリ秒から1.3秒の範囲の値として、最初は発見しやすく、その後は消費電力を抑える設定を推奨しています。1ミリ秒は、1000分の1秒です。

[^1110]:[Bluetooth for Developers - APple Developer @<href>{https://developer.apple.com/bluetooth/}](@<href>{https://developer.apple.com/bluetooth/})

機器を発見すると、接続処理を行いお互いにパケットをやりとりし続ける接続状態になります ([#fig_low_energy_packet] (b) )。パケットのやりとりを管理する役割をマスター、マスターに応答してパケットを返す役割をスレーブと呼びます。スキャナがマスターに、アドバタイザがスレーブに、役割を切り替えます。

マスターはコネクション・インターバルという期間ごとに、スレーブにパケットを送信します。マスターとスレーブは接続時にお互いの時計を同期しているので、スレーブはマスターがパケットを送信してくる時間だけ受信回路をオンにしてパケットを受信して、マスターにパケットを返します。

お互いにやりとりするデータがある限り、このパケットのやりとりが続きます。やりとりするデータがなくなれば、パケットのやりとりは終了して、次のコネクション・インターバルまで、マスターもスレーブも高周波回路をオフにしたままになります。これが超低消費電力の工夫です。設計ガイドライン [^1040]は、コネクション・インターバルを20ミリ秒から2秒の範囲を推奨しています。

== Bluetooth low energyのピコネット

[#fig_piconet Bluetooth] に示すように、Bluetooth low energyの機器はパケットを使い情報をやりとりする、つまりネットワークを形作ります。図の丸で囲まれたアルファベットは、機器それぞれを示します。矢印は機器の接続を示し、矢印の向きはマスターからスレーブを示します。

![ #fig_piconet Bluetooth low energyのピコネット](fig/ch01_fig050_piconet.png)

無線通信技術には、ある機器が送信したパケットを別の機器が中継をして、機器を束ねた1つの大きなネットワークを作る技術を提供するものがあります。しかし、Bluetooth無線技術は、目の前にある機器と直接無線で接続する技術で、このようなパケットの中継機能はありません。そのため、Bluetooth無線技術が作るネットワークは、直接電波が届く範囲に限られた小さなネットワークになります。

ピコネットは、Bluetooth無線技術の造語で、イタリア語で小さいを意味するpiccoloからとられた、SI単位系で $ 10^-{12} $ を表す接頭辞ピコとネットワークをつないだ、この小さなネットワークを意味する言葉です。

[#fig_piconet Bluetooth] (a)は、スキャナとアドバタイザが作るピコネットです。アドバタイザの送信したパケットは、その周囲にある複数のスキャナに届きます。機器の発見やビーコンに使われます。

[#fig_piconet Bluetooth] (b)は、接続しているマスターとスレーブがつくるピコネットです。マスターDは、スレーブCとスレーブEの2つのスレーブにそれぞれ接続しています。スレーブCとスレーブCからはマスターDが見えるだけで、スレーブはお互いの存在を知ることはありません。

クラシックBluetoothでは、1つのマスターと同時に接続できるスレーブの数は7つまでです。Bluetooth low energyでは、およそ $ 2^{31} $ (約21億)です。ですから、マスターに同時接続できるスレーブの上限数は、規格ではなくハードウェアなどの制約で決まります。

Bluetooth 4.0 の Bluetooth low energy では、[#fig_piconet Bluetooth] (b)のような、1つのマスターに複数のスレーブが接続するネットワークだけが許されていました。

このネットワークはマウスやキーボードを接続するにはよいのですが、例えば家族で利用するリビングのエアコンでは、ある1台のiPhoneと接続すると他のiPadやiPhoneからは接続ができませんから、とても不便です。

そこで、Bluetooth4.1からは[#fig_piconet Bluetooth] (c)のように、マスターが同時にスレーブになること、またスレーブが同時にマスターになること、さらにはマスターおよびスレーブは同時にアドバタイザになることが許されました。さらに、スレーブは同時に複数のマスターと接続してもよくなりました。

== スループットとレイテンシー

スループットとレイテンシーの2つの値は、通信の性能を表す重要な値です。スループットは1秒あたりに届けられるデータ量を、レイテンシーは今届けようとしたデータが実際に相手に届くまでにかかる時間です。レイテンシーは日本語で遅れ時間と言います。

原理的には、スループットはコネクション・インターバルによらないはずです。マスターとスレーブは、コネクション・インターバルごとに通信を開始して、やりとりすべきデータがあるかぎりパケットを交換し続けます ([#fig_low_energy_packet] (b) )。実際には、送信データを作る時間が必要になると、その時点でパケットのやりとりが終了して、次のコネクション・インターバルまで待つことになるので、スループットとコネクション・インターバルの関係は実装によります。

レイテンシーはコネクション・インターバル程度になります。例えばキーが押された情報を送信しようとすれば、それが実際に送信されるのは次のコネクション・インターバル以降です  ([#fig_low_energy_packet] (b) )。

コネクション・インターバルが短いほどレイテンシーは短くなりますが、パケットをやりとりする回数が増えますから無線通信の消費電力も増えます。求められるレイテンシーと消費電力の兼ね合いから、コネクション・インターバルを適切な値に設定します。

パソコンのキーボードは、人間が画面を見ながらキーをタイプするので、押された結果はすぐ画面に表示されなければなりません。画面表示更新レートが60 フレーム/秒であれば、1フレームの表示時間は 17 ミリ秒 です。Bluetooth Smart機器の設計ガイドライン [^1040] は、普通のBluetooth Smart機器はコネクション・インターバルに20ミリ秒以上を推奨していますが、キーボードなどの入力装置は 11.25 ミリ秒まで受け入れるとあります。

コネクション・インターバルをはじめとするコネクション・パラメータは、接続中に更新できます。待機状態では長いコネクション・インターバルにして電力を節約して、動作を開始したならばコネクション・インターバルを小さくして必要な機能を提供する機器が設計できます。

== 無線通信の混信対策と共存の技術

Bluetooth無線技術が使う2.4GHz帯は、電子レンジや無線LANなど、いくつもの電磁波を利用する機器がひしめき合う周波数帯です。ですから、電子レンジからの漏洩電波が妨害となり通信ができなくなったり、他の無線通信機器の通信に影響を与えたりしないように、共存するための技術が必要です。

共存するための工夫の1つが、空中線電力の上限設定です。送信回路がアンテナに出力する電力の大きさを空中線電力または出力電力と呼びます。空中線はアンテナの日本語表記です。電波はアンテナから四方八方に広がっていきますから、混信したり妨害になったりしないように、空中線電力は国ごとの技術基準で上限が規定されています。

Bluetooth low energyの規格は、空中線電力を最大10ミリワットとしています。日本の技術認定基準では、Bluetooth が採用している周波数ホッピング方式は 3 ミリワット/MHz を上限としています。Bluetooth low energyの周波数帯域は1MHzなので、日本での空中線電力は 3 ミリワット (4 dBm) が上限になります。

接続したBluetooth Smart機器は、コネクション・インターバルごとに通信に使う周波数を切り替えていく、適応周波数ホッピング方式を採用しています。もしも他の機器が使っていたりして、ある周波数では通信ができなくても、次のコネクション・インターバルで切り替えた違う周波数であれば、通信ができるかもしれません。

Bluetooth low energyは、2.4 GHz から 2.4835 GHz の 83.5 MHz の周波数幅を2 MHz 幅の40のチャンネルに分割して、チャネルを切り替えて通信します。

この周波数帯とチャンネルの関係は、ピアノの鍵盤に例えることができます。ずらっと並んだ鍵盤が周波数帯を表します。左から右に、周波数が低い方(低音)から高い方(高音)に鍵盤が並んでいます。鍵盤は1つのチャンネルに相当します。鍵盤を押せば、特定の周波数の信号(音)が出力されます。

1つのチャンネルでの通信は、例えばドの鍵盤の音を、ほんの僅か音色を変化させてデジタル・データを送信しているようなものです。他の機器が隣接するチャンネル、この例でいえばドの鍵盤の両隣にあるシやレの音、で通信をしていても、ドのあたりの音だけを通してシやレの音は通さないフィルタリングする信号処理を使えば、目的の信号だけを取り出せます。

コネクション・インターバルごとに違うチャネルつまり周波数にホッピングしていくので、周波数ホッピング方式と呼ばれます。

また、すぐ近くに無線LANなどがあって、通信に使えないチャンネルが事前にわかる場合があります。Bluetooth Smart機器は、状況に応じて通信に使えないチャンネルを指定できます。周囲の状況に適応していくので、これを適応周波数ホッピング方式と呼びます。

<!-- データ表現 -->

== Bluetooth low energy のデータ表現

Bluetooth low energyは、多種多様なものに向けた無線通信技術です。ですから、この規格は、今はまだない機器が新しく登場しても、それらが相互に接続して利用できる仕組みを提供しなければなりません。

クラシックBluetoothは、これまでの有線接続を無線接続で置き換えるための技術だと言えます。

クラシックBluetoothは、利用場面が規格で決められています。通信とデータ表現仕様を1つの組にして、利用場面ごとに適したものとなるように、決めています。例えば、同じオーディオ・データを送る機器でも、通話に使うヘッドセットには音声品質よりも小さい遅延時間が重要であり、音楽鑑賞に使うヘッドフォンでは、遅延時間よりも高品質な音が求められます。

Bluetooth low energyは、多種多様なもののための無線通信規格です。無線通信から、多種多様なものを見ると、それはデータの塊に見えます。そこで、Bluetooth low energyは、ものを表現するために、サービスとキャラクタリスで構成されるデータベースとそのデータ同期の仕組みを提供しています。

Bluetooth low energyの、このデータベースの仕組みは、スマートフォンのアプリケーション開発にも影響しています。

アプリケーションからクラシックBluetooth対応機器を見ると、音声データの入出力端子や、任意の通信データの入出力端子など、通信ソケットに見えます。ですが、アプリケーションから見たBluetooth low energy対応機器は、データベースに見えます。

この節では、この多様性を実現している要となる、Bluetooth low energyのデータ表現を見ていきます。

=== サービスとキャラクタリス

無線通信から"もの"をみると、それは情報の塊、つまりデータベースとして認識できます。スマートフォンのアプリケーションから、Bluetooth low energy で接続した機器をみると、サービスとキャラクタリスというデータの集合体に見えます。

Bluetooth low energy のサービスとキャラクタリスは、ものをデータベースとして表現する仕組みです。

サービスは、キャラクタリスの集合です。キャラクタリスは、値を格納するものを表します。キャラクタリスは、読み出し、書き出し、そして値の変更の接続先への通知の3つの属性が設定できます。キャラクタリスには最大TBD 512バイトまでのバイナリ・データを格納できます。

キャラクタリスの値は、外部センサー、内部状態、および制御目標のいずれか3つの意味をもちます。例えば、室内照明であれば、室内気温という外部センサーの値、コンプレッサーの動作状況やファンの回転数といった内部状態、および設定温度という制御目標があるでしょう。

サービスとキャラクタリスには、その種類を表す UUID という 128 ビットの識別子が設定れています。UUIDの値とその意味は事前に定義されているので、接続したスマートフォンのアプリケーションは、UUIDの値でそれがどのようなものなのかを判別できます。

iOSアプリケーション開発者ならば Objective-C でいう、クラスのインスタンスがサービスに、プロパティがキャラクタリスに対応していると理解できます。プロパティには、読み書き属性があります。またキー値監視( Key-Value Observing ) [^1130] でプロパティの値変化の通知が受け取れるのと同じく、キャラクタリスに監視登録をすれば、その値変化の通知を受け取れます。

[^1210]: [Introduction to Key-Value Observing Programming Guide]( @<href>{https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/KeyValueObserving/KeyValueObserving.html} )

サービスとキャラクタリスの検索と取得、そしてキャラクタリスへの値の読み書きと値変化の通知取得の仕組みは、通信路の上にある アトリビュート・プロトコル(Attribute Protocol、ATT) と Generic Attribute Profile(ジェネリック アトリビュート プロファイル、GATT) の2つの層です。

Bluetooth low energy を搭載する周辺機器のファームウェア、つまり周辺機器に内蔵されているアプリケーションの開発は、この2つの層の上に実装します。つまり、データベースとして抽象化された層で開発します。これは、通信路に流れるバイナリ・データの流れを直接扱う通常よくある無線通信機器のアプリケーション開発と異なる点です。

=== もののデータベース表現

Bluetooth low energy は、ものを、これ以上分割できない最小の機能の集合として見ます。

機器は、その最小単位の機能に対応する種類のサービスの集合体となります。機器が同じ機能のハードウェアを複数持っていれば、その種類のサービスを複数持ちます。例えば、温度センサーは1つのサービスにできます。室内エアコンが、室外温度と室内温度それぞれの温度センサーをもっているなら、それぞれの温度センサーに対応する2つのサービスを持ちます。

もしも最小の機能ではなく、機器の見た目そのままを分割単位とするとどうなるのでしょうか。

例えば、赤外線リモコンがある照明機器の、Bluetooth low energy 搭載にした新製品を開発するとします。赤外線リモコンの受信回路を、Bluetooth low energyの無線回路で置き換えて、赤外線リモコンはスマートフォンのアプリケーションで提供するとします。

ちょうどリモコンを1つのサービスとみたてて、そこに赤外線リモコンのボタン1つ1つに対応するキャラクタリスを入れたとします。このやり方でも、1アプリケーションに1機種が対応するだけなら、うまくいきます。

しかし、2機種3機種と対応機種が増えていくと、新機種ごとに機器内部の受信回路とスマートフォンのアプリケーションとを開発しなくてはなりません。これでは、開発にかかる費用も時間も大きくなります。

ここで、機器の最小機能単位で設計すればどうなるでしょうか。

例えば、照明機器であれば、どの機種にも共通する基本機能、電源のオン・オフ、明るさ調整および色合い調整などを1つのサービスにしたとします。この設計であれば、開発した機器とスマートフォンのアプリケーションは、今後発売されるものも含めた全ての照明の基本機能に対応できます。

また、上位機種に、例えば映画鑑賞時の照明機能のような、それまでなかった新機能を追加したとします。これは、基本機能とは独立した機能なので、この心機能を1つのサービスとして追加します。こうすると、基本機能のソフトウェアのソースコードは、そのまま再利用して、追加したサービスに対応するソースコードのみを新規開発することで、上位機種に対応するアプリケーションが開発できます。

このように、お互いに独立した最小単位機能をサービスに対応させることで、ソースコードの再利用をはじめとした利点が生じます。

=== データベースとしてのものの表現

ものを Bluetooth low energy から見ると、それは最小の機能の集合を表すデータベースでしかありません。Bluetooth low energy は、最小の機能単位とその組み合わせで、多種多様なものを表します。

例えば、身の回りには多種多様の照明機器があります。天井や机そして床に設置されるシーリング・ライトやテーブル・ライトそしてフロア・スタンド、また外観デザインも1つ1つ異なります。人間には多種多様に見えますが、しかし、その機能はどれも照明機器です。ですから、Bluetooth low energy から見れば、いずれも照明機器の基本機能を表す1つのサービスでしかありません。

また、懐中電灯は電池を内蔵した照明機器です。これは電池残量などの基本機能をあらわすサービスと、照明基本機能のサービスの、2つのサービスの組み合わせで表現できます。このように照明機能もある機器でも、機能に対応するサービスの組み合わせとして表現ができます。

またサービスは、新しい機能が必要となった時に、従来のサービスはそのままに新しいサービスに拡張する仕組みがあります。これは、オブジェクト指向のクラス継承に相当します。

例えば、人を検出して自動点灯する照明機器が登場して、それを照明基本機能に追加したいとします。この場合は、従来のサービスに人体検出を表すキャラクタリスティクスを追加した新しいサービスを定義して対応できます。

新しいサービスの定義でできることは、従来サービスにキャラクタリスを追加することだけで、キャラクタリスを削除することはできません。また、すでにあるキャラクタリスの値の意味を変えることもできません。ですから、新しいサービスは、その追加されたキャラクタリスを無視すれば、従来サービスとして扱うことができます。

このように、Blueooth Low Energyの、ものを表現するデータベースは、多様性と将来の拡張性そして後方互換性を保てるようになっています。

多様性は、サービスの組み合わせの掛け算で実現できます。将来の拡張性は、サービスの拡張で対応できます。また新しいサービスはその元となったサービスとして扱えるので、その新しいサービスに対応していないアプリケーションでも従来機能を同じように利用し続けることができます。つまり、後方互換性が自動的に保たれます。

=== サービスとプロファイル

Bluetoothは、Bluetooth で機器と通信したときの振る舞いと、その使われ方の定義とをプロファイルと呼びます。プロファイルの定義のなかで、機器の機能を表すサービスも定義されます。

簡単にいえば、サービスの定義までが機器単体の機能を定義します。プロファイルは、スマートフォンのアプリケーションとその機器とが、お互いにどう振る舞うのかを定義します。プロファイルの定義は、Bluetoothの相互接続を確保するための仕組みです。

サービスが最小単位の機能を表していたように、プロファイルも最小単位の使い方を定義します。たいていの製品は、複数のプロファイルを持ちます。

鍵の置き忘れ防止に Bluetooth low energy がよく使われている、キー・フォブ (key fob) と呼ばれる鍵に取り付けるアクセサリを例に、kのプロファイルとサービスの組み合わせの実例を見てみます。

スマートフォンとキーホルダーとは、無線接続して使います。鍵もしくはスマートフォンのどちらかを置き忘れると、距離が離れて電波強度が下がるか通信が切断します。この時に警告を出力して、置き忘れを防止します。また、鍵もしくはスマートフォンのどちらかが見つからない時は、ボタンを押して接続先の機器から音を出させることができます。

このキーホルダーには、Proximity Profile (プロクシミティ・プロファイル) [^1140] と Find Me Profile (ファインド・ミー・プロファイル) [^1150] の2つのプロファイルが実装されます。

Proximity Profile は、ある一定距離離れた時にキーホルダーから警告を出力する振る舞いを定義します。 Find Me Profile は、ボタンが押された時に接続先から警告を出力させる振る舞いを定義します。つまり、製品の2つの機能がそれぞれプロファイルとして定義されているわけです。

[^1220]: [Proximity Profile (PXP), @<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/PXP.aspx](https://developer.bluetooth.org/TechnologyOverview/Pages/PXP.aspx})

[^1230]: [Find Me Profile (FMP), @<href>{https://developer.bluetooth.org/TechnologyOverview/Pages/FMP.aspx](https://developer.bluetooth.org/TechnologyOverview/Pages/FMP.aspx})

プロファイルは、1つのサービスを共有して利用できます。例えば、さきほどの Proximity Profile と Find Me Profile は、いずれも Immediate Alert Servide (イミディエイト・アラート・サービス)  [^1160] を使います。

[^1240]: [Immediate Alert Service @<href>{https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.immediate_alert.xml](https://developer.bluetooth.org/gatt/services/Pages/ServiceViewer.aspx?u=org.bluetooth.service.immediate_alert.xml})

イミディエイト・アラート・サービスは、警告音を出す機能です。Proximity Profile では、置き忘れの警告レベルの設定に使われます。Find Me Profile では、直ちに警告を出力するために使われます。2つのプロファイルが1つのサービスを共有しても、使い方に不都合を生じない問題ありません。

=== カスタム・プロファイルとプロファイルの標準化

Bluetooth low energy は、自由にプロファイルを設定できます。これをカスタム・プロファイルと呼びます。カスタム・プロファイルに必要なサービスやキャラクタリスも自由に設定ができます。

サービスやキャラクタリスは、UUIDという識別子で識別します。通常は、識別子は、違う人が同じ識別子を違う人が違う意味で重複して利用しないように、サーバーや認証機関で一元管理されています。

このUUIDは、サーバーがない一元管理することができない分散処理系で、個々の機器が勝手に生成しても、それらが重複しないように工夫されてた識別子です。Mac OS X であれば、ターミナルでコマンド uuidgen を実行すれば、UUIDを生成できます。

独自の Bluetooth low energy 機器の開発は、まず機器の振る舞いをカスタム・プロファイルとして定義して、次に、そのプロファイルに必要なサービスとキャラクタリスに生成したUUIDを割り当てて、設計していきます。カスタム・プロファイルの機器に対応するスマートフォンのアプリケーションは、そのカスタム・プロファイルの定義とサービスとキャラクタリスのUUIDの情報があれば、設計できます。

また Blutooth SIG のメンバーになることで、Bluetoothにプロファイルを提案して採択してもらうことができます。

1社で製品とその対応アプリケーションを提供するだけであれば、カスタム・プロファイルでよいのです。ですが、例えば心拍計のような一般的な機器でこのようなやり方をすると、同じ目的の機器に対して、会社ごと異なる無数のカスタム・プロファイルが出てきてしまいます。

業界に関わる会社群が、標準化したプロファイルを Bluetooth SIG に提案して採択してもらい、同じ振る舞いを1つのプロファイルに統合することが、機器市場をつくり上げるうえでも必要になります。

2015年1月には、次の15のプロファイルが採択されています。Bluetooth low energy が登場する以前から無線化が進んでいた、フィットネスや自転車などの分野で使われる機器のプロファイルが、特に早くから採択されてきています。

[Profiles | Bluetooth Development Portal](@<href>{http://developer.bluetooth.org/gatt/profiles/Pages/ProfilesHome.aspx})

* アラート通知 (Alert Notification)
* 血圧計 (Blood Pressure)
* 自転車のパワーメータ (Cycling Power)
* 自転車の速度とペダル回転数 (Cycling Speed and Cadence)
* デバイスの発見 (Find Me)
* 血糖値 (Glucose)
* 体温計 (Health Thermometer)
* 心拍 (Heart Rate)
* 入力装置 (HID OVER GATT)
* 位置と経路誘導 (Location and Navigation)
* 電話の警告(Phone Alert Status)
* 近接 (Proximity)
* ランナーの速度とペース (Running Speed and Cadence)
* スキャナの通信パラメータ設定 (Scan Parameters)
* 時刻 (Time)

#@# レイヤをまたいだ、セキュリティとプライバシーの話をまとめる



ポイント
	媒体の性質でどうしょうもない仕組み。
	電波。周波数帯、通信距離、消費電力、譲り合い、同時に使う人の数。
	周波数の幅、チャンネルの数。
	無線通信
		離れたところに信号が遅れる何か。送信している時、相手が受信していると期待する使い方。
		距離が離れると、だんだん聞き取れなくなる。
		人や建物、海の中とかだと、極端に聞き取れなくなる。海の上とか、山頂から平野とかだとかなり遠くまで。
		強烈な出力にすれば、他の人に混じる。
		遠くに離れても、全然通信が途切れない->エネルギーの保存法則かなにかに反するか、トラッキングでめちゃくちゃ細いビームで常に狙われているか。		
		諦めろ。
	
	一般に使おうとすると出てくること
		たくさんの人が同時で使えるように。装置で1対、
		知っている相手なら、登録リストから選んで呼び出すとか。相手を探して選ぶ。
		ファミレスの昼間、デバイスの接続が切断したら二度と繋がらなかった。
	
	赤外線リモコンだと?
		壁1枚どころか、ノート1冊でも。超音波、周波数、データレート。

	ぴーっという音そのもの、自動車のライト、人の耳には聞こえない音、電波、赤外線リモコン
	いろんなものが媒体たりうる。そしてどれも、上のような性質を持っている。

	無限に遠くというのは、諦めろ。できることはできるけど、届く範囲は届く範囲。現状を受け入れるか、普通の使い方で設定してある。範囲ギリギリまで、出力を上げるか、まばらに面で配置する。

	エラー検出と訂正。送り直してもらうというやり方。送るデータ自体に仕組みを入れる。

	届く距離を広げること、目の前、ご町内、街全体、都市、地球上、太陽系(光でも長い時間)
	デジタル通信。デジタルデータ。正確さ。通信速度。遅れ時間。無線通信にかかる消費電力。
	配線がないこと、P2Pで設備がいらない、移動体。だから船とか飛行機、移動する何か。

=== Bluetooth Low Energy技術を体験してみる
電波を出す、受信する箱が、アイフォんのなかや、ものの中、小さな基板、無線モジュールとして。
無線モジュールとかは、無線通信の制御と一緒に、ものを動かす、マイコンでプログラムが入っている。
ソフトも入ってる。

ビーコン。通信相手を発見する時に使う、アドバタイズメントの仕組み。それで情報を伝える。31バイト、もしも英数字だと31文字。実際には、もっと少ない情報量。


=== 通信の進歩を遡ってみよう

=== 通信の始まりを体験してみよう

磁石や電気の力、離れた場所のものが動く、静電気、冬場に指先を痛くする。理科の実験。
磁石は間に物が挟まっていても動く。
電池が発明されて、安定した電流を流せるようになると、導線をぐるぐる巻きにしたコイルに電流を流すと磁石と同じ作用。電圧をものすごく高い電圧にすると、静電気と同じ作用。
さらに、電気の力で磁石になるなら、磁石を吸い付ける具合を調整すれば、電気の力で物が動かせる。モーター。
さらに、逆に、ぐるぐる巻きにしたコイルに磁石を出し入れすると、電気が起こる。発電。高温で精錬した金属を使う、とても効率の悪いエネルギーの姿を変える物、いわば筋肉で動かすものの運動エネルギーを電気のエネルギーに変換する。

最初に電磁波の理論を打ち立てて

電波を出す(出す、出さない)、電波を受信する(電波がある、ない)。


通信で、つながっている状態。デジタル信号のゼロとイチを電波で送信する。受信側はそれを受信する。
ものすごく原始的には、人間が大声で叫んでいるようなもの。でも、聞いてる人がいるから叫んでいる。
パケットと呼ばれる短い時間の電波の送信時間。

ソフトウェア構成、スマホと何かのデバイス。
ハードウェアの構成、そのハードの中のソフトウェアの構成。
通信、マイクロ秒単位でやり取りする無線通信回路とその制御、パケットという単位で。
データ表現、GATT基盤、表のようなデータ。サービスとキャラクタリスティクス。ハードがサーバー。
スマホ側。内部に無線用の回路とアプリケーション。通信を取りまとめるデーモン。
通信制御のマスター、スレーブ。GATT基盤のデータ通信の、サーバーとクライアント。

接続を維持している。一定時間ごとに、パケットを出して、それに対してデータがあれば返す。なければ、何もないよと返す。

読み書き、変更の通知。
ボタンが押されたら、それがGATTのテーブルの値を変化させる。変更通知取得フラグを立てていたら、それが通知される。

機能と振る舞い
テーブルにはサービスとキャラクタリスティクス。プロファイルとは。
SIGに認証されたプロファイル、カスタムなプロファイル。

まとめ:

==== 相手を発見する、発見してもらう
==== セキュリティや接続やら
==== GATT基盤の読み書き
==== 切断時の振る舞い

=== 開発の選択肢
セキュリティ、ペアリング、ボンディング
接続するもの、しないもの。
消費電力と通信頻度と通信速度、コネクションインターバル
設計データの構造とか。MTUって何?
さらなる拡張、L2CAP チャネル、ビーコンの拡張

== 発見、キャッシュ、セキュリティ、ボンディング
も少し詳しい流れで。
無線通信の詳しいの。両端から見て、データやり取りができれば良い。すぐに届く?　コネクションインターバル、遅延時間。
チャンネル、周波数の幅、3つを発見用。残り47が通信用。ホッピングしていく。


== 規格とその変遷
1.0, 2.0, 3.0, 4.0, 5.0	物理相


== Bluetooth無線技術と利用場面の変遷


通信の全体像。無線通信、ポイントからポイント。データのタイミングや形式まで含めて。
ものに埋め込むから、容易には変えられないし、後方互換性。
たくさんの会社がそれぞれに作る、相互運用、見たこともない組み合わせかもしれない。問題ないこと?
なんで1社で作らないの? 通信だけならいいけど、音の処理とかセキュリティとかは、OSがらみとか。構成。
通信相手を見つけること。規格。
規格から逆算して、スマートホンを例にして。PCでも同じか。


無線通信規格、高周波回路を含む半導体、モジュール、製品、そして利用場面。製品より先に半導体とか、結構な技術駆動。

利用場面、
イヤホン、マウス、キーボード。PCの周辺装置。
テザリング、個人的なデータの交換。IrDAとかありましたけど。高速化、MACの入れ替え。

特にイヤホン、マイク系は今も稼ぎ頭。半導体の高速化=コーデックの進化、で高音質化を理由にして買い替えチャンス。最近は、ワイヤレス型の左右分離のイヤホンという市場もできたし。そこにNCとかの付加価値も。音切れしない、スムースな接続、接続先の簡易な切り替え、




== Bluetooth無線技術とその規格の変遷
=== 無線通信規格の役割
=== 無線通信規格のこれまで
1.0, 2.0+EDR, 3.0+HS, 4.0, 5.0,
=== Bluetooth Low Energy技術のこれまで
規格の登場。スマホ、有線接続ではない。接触時間がとても長い。日本国内出荷台数、PC6400億円、スマホ2兆円くらいか。
アプセサリ。サービスと統合された形。アプリ+何かで、1事業者の配信。
プラットホーム側。HomeKitとか、iBeaconとか、MIDI over BLEとか。

通信には必ず通信相手が必要。通信相手とは同じ技術、相互運用可能な、を持っている必要がある。
インターネット・プロトコルとの関係。
周波数は2.4GHz、ISMで世界で広く使える。他の方式、特に電子レンジとか、いろんなものがあるので、そういう状況で、ガードとかも考えて作られている。世界各国で販売できる。
歴史的には、Bluetooth1.0から

=== Bluetooth Low Energy技術の特徴
==== 超低消費電力、低価格
電波の送受信タイミングの同期。緩い制約。
==== GATT基盤
サービス、キャラクタリスティクス、GATT基盤。
==== カスタムプロファイル
認証されたプロファイル、カスタムプロファイル。
GATT基盤
==== セキュリティ
すぐ使える、暗号化、ボンディング。

=== BLEの置かれた環境、活用の範囲
2011年、iPhone4S。HomeKit仕様の公開、開発ボード、販売の形式。ハードからソフト実装。
SIMカード、携帯網、料金など認証。セキュリティを小さなチップで補っているけど。
==== アプセサリ
アプリケーションに開かれた何か。
==== エコシステム
ハードウェア的なもの、キーボード、マウス、ペンシル。周辺機器。消耗品。
iBeacon、HomeKit、ANSやMIDIなどの利用(限定された周辺機器的な機能)



== 開発のあれこれ
=== Bluetoothの認証フロー
認証は、電波法(各国単位)と、BLE(BT SIG)のそれぞれ。

2018年くらいに、大きく変わった。

商標の利用、特許のあれこれのまとめライセンシング。
モジュール単位、内部の半導体、通信プロトコルスタック(コントローラ、スタック)、それぞれに認証があって。組み合わせて使う場合は、それらの認証を継承して、勝手に開発した場合は、それは個別に認証になる。

モジュール+既存のソフトウェアの場合は、自己申告。USBドングルとソフトウェアがあって、それでレポートを作って提出。



会員の種類が2つ。年会費無償のと、年会費があるのと。規格の会議に参加するとか、プロファイルを提出するとか、できることの違いがある。認証の検索は誰でもできる。費用は会員種別で異なる。

ベースの認証は、最新の規格に揃える形で。古い規格の認証は、追加料金。

ベンチャー会社の支援体制。BLEが登場した当時は、登録料金が実は無償だった。今は、1年限定でお安く登録、その後に追加料金発生というパターン。1台しか作らない製品では、ライセンス料金がとても高くなってしまうので、どうにかならないかという気もするけど。普通は、数万台の単位で何百万台も作る、じゃないと開発費用の収益が合わないというものだから、開発費用を考えれば、それはそれで諦めるくらいでは。

=== 技適
カスタムか、モジュールか。

FCCの場合は、電波法の部分は使えるけど、製品レベルで、電磁適合はとるから。本体シールドがないのが多いのも

MICは、一番緩いのかも。技術適合とか測定の細かいのはマニュアルが二万円くらいで販売。500台までなら、技適で。それ以上の場合は、ISOに適合した生産管理体制がある工場で。抜き取りテストで、測定方法。その書類を書くには、免許は。特殊無線技士くらいだった。任せておくのがいいのかもだけど。

EUは、届出せいど。腹面市場調査でひっかかると、製品回収のリコール。罰金も発生。かなり痛いはず。

そのほか、カナダ、韓国、などなど国ごとに異なる。試験を国ごとにする必要もないので、販売する国を決めて、試験会社と相談をしておくのがいい。結構その時々で改訂とかもありますし。














ものに組み込まれて、
デジタル・データをやり取りする無線通信規格

Bluetooth Low Energy技術は、世の中に数あるデジタル無線通信規格
デジタルデータ、パケット通信、
おしゃべり、電波が届く直接の範囲。パケットを中継する、データを扱う仕組み。通信だけで、そのほかは別の技術、丸々1つの規格。Bluetooth Low Enerrg技術は、まるっとしている感じ。

アプリ、ハード、利用場面、商品として適切かとか。他の無線通信技術の方が適している、あるいは移行するとか。数値により、

技術よりの話をしますか。技術者が、解っても仕方ない。パズルみたいなもの。パケットを見ながらデバッグとか、iOSアプリの開発者もするよね。作っているときの、問題への対処。細かい振る舞いを見るけど、基本は通信パケットを見ることが、一番最強。読めたらね。

流れ全体を知った上で、
パケットからの把握は、出所から辿り着く先までの動き、途中の流れから、どう動いているのかを判断して、それで考える。無線通信回路、電波、いろんな媒体、経路を通じて、スタック、アプリ、いろんなところがやり取りして処理して。1つじゃない。なので、現象を理解して、その原因を絞り込み、できれば、その理解には通信プロトコルやら、振る舞いによっては電波の伝搬も。

ハードウェア専門だと言っても、通信プロトコル、プロファイルは作ると。アプリや、通信が断絶したときに、複数回書き込むと完了するのに、通信が断絶したら、中途半端なデータで動くとか。仕様を作るというの。アプリとの関わりかた、ラジコンカー、切断時に、モータ出力をそのまま、走っていって、ぶつかるまでとか。通信、振る舞い、通信でしょうじる振る舞い、通信は安定した電線ではないので。

必要になる場面は、作るときにポカしていないか、将来的な発展を予想して何か作っておくべきかとか、自分の立場で考えるためには知識がいると。知らないとできないし、気づけない。

状況:
この技術と自分との関わり方、利用場面や事業、あるいはチームとその構成まで。実際に、ものとものとがおしゃべりする様な場面を生み出すには、適した技術、特に通信相手となるスマホが普及しているから、もう1つの片方の製品をうれば、あとはアプリで普及できる。

Bluetooth SIG:
規格を動かすのってかなりハイリスク。ハードウェア構成が変わるとか、対応コストが半端ない、動いているものをずっと動かさないといけない。必要性。
ソフトウェアで結構どうにでもなるところが、でっかくて。そして、新たに登場する利用場面に合わせて、かなり素早く動いている。規格が動いてくれないと誰も動けないから。規格の役割。

== 無線通信規格の特徴

無線通信ってなんだ? 基本は、双方向。放送じゃなくて通信なので。お互いにやり取りする何か。

電波を直接にやり取りする何か。デジタルデータ。音声や画像、ウェブページやあらゆるものが0と1の羅列、デジタルデータ。デジタルデータの通信。相手から何かしら電波で信号が来ているとわかること、それが0なのか1なのか、どちらを意味しているのかが区別できればいい、変調方式。

より早く、より遠く、より安く。
一瞬で、デジタルデータを送信できる。短い時間で通信が終わっちゃう。超高速。
より遠く、地球の裏側とか。地球中に通信相手をばらまいて、データを集めるなんてできちゃうかも。
消費電力が小さくて、ハードウェアが安い。
運用費用が安価、

そんなものはない。超高速、距離が取れない、電力が必要、高価。
程々必要な速度にしたり、極端に低速でもいいよ、距離が取れる、から、電力小さい、安価。
意外と、電力小さい、超高速だと一瞬でオフにできるから、データの量あたりの消費電力。

結構きついかも。電話で人間が話をしているとき。なんだか聞き取りにくい時は、もっと大きな声で話して。出力を上げてもらうこと。ちょっと聞き取れなくても、前後の関係で、推測できるなら、聞き直すことはないかもしれないし。(聞き間違いするかもしれないけど)



いくつもある無線通信規格の中で、これを選ぶ理由。他を選ぶべきかも? 心配になるものです。
正しい選択をしたのかと。個人の場合は、これじゃないものになる。事業の場合は、体験あるいはコストが食い違う。

超低消費電力: 電池の小ささ、身に付けるもの、実用的な稼働時間。
モータを回すとか、電池が大きくても（容量、重量）、そういう場面

プラットホーム: 通信相手の環境
技術それ自体が普及していること。スマートホンのアプリケーションから、通信相手の発見、接続と切断、読み書きができること。カスタムプロファイルで、任意のものが作れること。ハードウェアがらみ。

ライセンスとしては、MFiの壁があった。アプリ開発の自由さと同じで。あとは、プラットホームが2つだけど、両方対応が作れること。
iOSとしては、相手の発見、デバイスの発見など。ただ、近接通信の無線技術を取り入れたりしているので、今後もBLEを使うかどうかは不明。もしかすると、もっと別のUWBな技術に移行する、その技術を公開していくのかもしれない。MFiで。

=== いくつもある無線通信技術との比較
=== 無線通信規格の変線

== ほげほげ
=== ほ

	 Bluetooth無線技術とBluetooth Low Energy
	 	  無線通信規格の役割
				通信には必ず通信相手が必要。通信相手とは同じ通信の知識を共有していなければならない。
	 	　歴史と発展
				無線通信技術。
				情報通信社会、通信をベースにした社会。
				パソコンの裏側、無線通信、コスト。モバイル化。必然としてコネクタはNG。拡大できない。
		 いくつもある無線通信技術との比較
		 		周波数帯、方式、費用(製造とランニング)、設定、初期化。破棄までの流れ。
		 超低消費無線通信技術の統合
		 		無線通信から異なる。秘訣は、短時間のオンだけで完了する通信。イベントを伝える通信。
				ハードウェアの抽象化、ATT/GATT。
		 Bluetooth Low Energyのエコシステム
		 		iPhone4Sから始まった。プラットホームとしての展開。
		 		アプリケーションへの開放。ハードウェアは自動的に。BTが4になると半ば強制で。
				他のOSは。Android、Windows、Linuxの対応。ドライバ、アプリケーションからの利用。
		 アプセサリの登場
		 		アプリケーション、サービスと統合されるハードウェア。
				フィットネス、Keyfob、近接検出、自動ログイン、WiFi設定、ANCS通知。メガネ的なもの。

		技術とその活用
			活用例
				既存分野での発展的利用、教育、プラットホーム的なものとして。
			発想方法
				プロトタイピング、作らない方法。
			開発フロー
				外に出すのか、自分たちで作るのか。手短な何か。
			チームの作り方
				雇うのか、組むのか。

		まとめ
			無線通信技術は、この100年間で社会を大きく変化させてきた技術です。
			Bluetooth Low Energyは、スマートホンを土台にしたエコシステムで、急速に普及しました。
			多種多様なものに使うための、超低消費電力とデータ表現能力、セキュリティがあります。
			アプセサリ、という言葉が生まれるように、目に見えない関わり方の活用があります。
			独自のハードウェアではなく、プラットホーム利用ができます。